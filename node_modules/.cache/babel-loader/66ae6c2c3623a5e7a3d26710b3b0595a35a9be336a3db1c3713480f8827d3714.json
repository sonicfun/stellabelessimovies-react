{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonic\\\\OneDrive\\\\Documents\\\\FInal Version(Hopefully) for stella site\\\\stellabelessimovies\\\\src\\\\components\\\\MovieSwiper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './movieSwiper.css';\nimport 'swiper/css';\nimport 'swiper/css/effect-coverflow';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Autoplay, EffectCoverflow, FreeMode } from 'swiper/modules';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSwiper({\n  slides,\n  slideChange\n}) {\n  _s();\n  const [tapPosition, setTapPosition] = useState(null);\n  const [swipeOverlay, setSwipeOverlay] = useState(null);\n  const swipeStartRef = useRef(null);\n\n  // Handle tap/click\n  const handleClick = (slideId, e) => {\n    slideChange(slideId);\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.touches ? e.touches[0].clientX - rect.left : e.clientX - rect.left;\n    const y = e.touches ? e.touches[0].clientY - rect.top : e.clientY - rect.top;\n    setTapPosition({\n      x,\n      y\n    });\n    setTimeout(() => setTapPosition(null), 500);\n  };\n\n  // Swipe visual debug\n  const handleTouchStart = (e, index) => {\n    const touch = e.touches[0];\n    swipeStartRef.current = {\n      x: touch.clientX,\n      y: touch.clientY\n    };\n    console.log('Touch start on slide', index, touch.clientX, touch.clientY);\n  };\n  const handleTouchMove = (e, index) => {\n    const touch = e.touches[0];\n    if (!swipeStartRef.current) return;\n    const dx = touch.clientX - swipeStartRef.current.x;\n    const dy = touch.clientY - swipeStartRef.current.y;\n    setSwipeOverlay({\n      dx,\n      dy\n    });\n    console.log(`Swipe on slide ${index}`, {\n      dx,\n      dy\n    });\n  };\n  const handleTouchEnd = index => {\n    console.log('Touch end on slide', index);\n    setSwipeOverlay(null);\n    swipeStartRef.current = null;\n  };\n  const handleSlideChange = swiper => {\n    const realIndex = swiper.realIndex;\n    console.log('Slide changed to real index:', realIndex, 'Slide ID:', slides[realIndex]._id);\n  };\n  return /*#__PURE__*/_jsxDEV(Swiper, {\n    effect: \"coverflow\",\n    grabCursor: true,\n    centeredSlides: true,\n    slidesPerView: \"auto\",\n    loop: true,\n    autoplay: {\n      delay: 2500,\n      disableOnInteraction: false\n    },\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true\n    },\n    freeMode: {\n      enabled: true,\n      momentum: true,\n      momentumVelocityRatio: 0.7,\n      momentumBounce: true,\n      momentumRatio: 1\n    },\n    touchRatio: 3.5,\n    threshold: 5,\n    resistance: true,\n    resistanceRatio: 0.85,\n    modules: [Autoplay, EffectCoverflow, FreeMode],\n    className: \"movieSwiper\",\n    onSlideChange: handleSlideChange,\n    children: [slides.map((slide, index) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide-content\",\n        onTouchStart: e => handleTouchStart(e, index),\n        onTouchMove: e => handleTouchMove(e, index),\n        onTouchEnd: () => handleTouchEnd(index),\n        onClick: e => handleClick(slide._id, e),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: slide.previewImg,\n          alt: \"Preview\",\n          draggable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), tapPosition && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tap-indicator\",\n          style: {\n            left: tapPosition.x,\n            top: tapPosition.y\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), swipeOverlay && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swipe-overlay\",\n          style: {\n            transform: `translate(${swipeOverlay.dx}px, ${swipeOverlay.dy}px)`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, slide._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"swipe-hint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieSwiper, \"Jz+WNizLA0MvKm2DZXZb4eHoXss=\");\n_c = MovieSwiper;\nexport default MovieSwiper;\nvar _c;\n$RefreshReg$(_c, \"MovieSwiper\");","map":{"version":3,"names":["React","useState","useRef","Swiper","SwiperSlide","Autoplay","EffectCoverflow","FreeMode","jsxDEV","_jsxDEV","MovieSwiper","slides","slideChange","_s","tapPosition","setTapPosition","swipeOverlay","setSwipeOverlay","swipeStartRef","handleClick","slideId","e","rect","currentTarget","getBoundingClientRect","x","touches","clientX","left","y","clientY","top","setTimeout","handleTouchStart","index","touch","current","console","log","handleTouchMove","dx","dy","handleTouchEnd","handleSlideChange","swiper","realIndex","_id","effect","grabCursor","centeredSlides","slidesPerView","loop","autoplay","delay","disableOnInteraction","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","freeMode","enabled","momentum","momentumVelocityRatio","momentumBounce","momentumRatio","touchRatio","threshold","resistance","resistanceRatio","modules","className","onSlideChange","children","map","slide","onTouchStart","onTouchMove","onTouchEnd","onClick","src","previewImg","alt","draggable","fileName","_jsxFileName","lineNumber","columnNumber","style","transform","_c","$RefreshReg$"],"sources":["C:/Users/sonic/OneDrive/Documents/FInal Version(Hopefully) for stella site/stellabelessimovies/src/components/MovieSwiper.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './movieSwiper.css';\r\nimport 'swiper/css';\r\nimport 'swiper/css/effect-coverflow';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Autoplay, EffectCoverflow, FreeMode } from 'swiper/modules';\r\n\r\nfunction MovieSwiper({ slides, slideChange }) {\r\n  const [tapPosition, setTapPosition] = useState(null);\r\n  const [swipeOverlay, setSwipeOverlay] = useState(null);\r\n  const swipeStartRef = useRef(null);\r\n\r\n  // Handle tap/click\r\n  const handleClick = (slideId, e) => {\r\n    slideChange(slideId);\r\n\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const x = e.touches ? e.touches[0].clientX - rect.left : e.clientX - rect.left;\r\n    const y = e.touches ? e.touches[0].clientY - rect.top : e.clientY - rect.top;\r\n    setTapPosition({ x, y });\r\n    setTimeout(() => setTapPosition(null), 500);\r\n  };\r\n\r\n  // Swipe visual debug\r\n  const handleTouchStart = (e, index) => {\r\n    const touch = e.touches[0];\r\n    swipeStartRef.current = { x: touch.clientX, y: touch.clientY };\r\n    console.log('Touch start on slide', index, touch.clientX, touch.clientY);\r\n  };\r\n\r\n  const handleTouchMove = (e, index) => {\r\n    const touch = e.touches[0];\r\n    if (!swipeStartRef.current) return;\r\n\r\n    const dx = touch.clientX - swipeStartRef.current.x;\r\n    const dy = touch.clientY - swipeStartRef.current.y;\r\n    setSwipeOverlay({ dx, dy });\r\n    console.log(`Swipe on slide ${index}`, { dx, dy });\r\n  };\r\n\r\n  const handleTouchEnd = (index) => {\r\n    console.log('Touch end on slide', index);\r\n    setSwipeOverlay(null);\r\n    swipeStartRef.current = null;\r\n  };\r\n\r\n  const handleSlideChange = (swiper) => {\r\n    const realIndex = swiper.realIndex;\r\n    console.log('Slide changed to real index:', realIndex, 'Slide ID:', slides[realIndex]._id);\r\n  };\r\n\r\n  return (\r\n    <Swiper\r\n      effect=\"coverflow\"\r\n      grabCursor={true}\r\n      centeredSlides={true}\r\n      slidesPerView=\"auto\"\r\n      loop={true}\r\n      autoplay={{ delay: 2500, disableOnInteraction: false }}\r\n      coverflowEffect={{ rotate: 50, stretch: 0, depth: 100, modifier: 1, slideShadows: true }}\r\n      freeMode={{\r\n        enabled: true,\r\n        momentum: true,\r\n        momentumVelocityRatio: 0.7,\r\n        momentumBounce: true,\r\n        momentumRatio: 1,\r\n      }}\r\n      touchRatio={3.5}\r\n      threshold={5}\r\n      resistance={true}\r\n      resistanceRatio={0.85}\r\n      modules={[Autoplay, EffectCoverflow, FreeMode]}\r\n      className=\"movieSwiper\"\r\n      onSlideChange={handleSlideChange}\r\n    >\r\n      {slides.map((slide, index) => (\r\n        <SwiperSlide key={slide._id}>\r\n          <div\r\n            className=\"slide-content\"\r\n            onTouchStart={(e) => handleTouchStart(e, index)}\r\n            onTouchMove={(e) => handleTouchMove(e, index)}\r\n            onTouchEnd={() => handleTouchEnd(index)}\r\n            onClick={(e) => handleClick(slide._id, e)}\r\n          >\r\n            <img\r\n              src={slide.previewImg}\r\n              alt=\"Preview\"\r\n              draggable={false}\r\n            />\r\n            {tapPosition && (\r\n              <div\r\n                className=\"tap-indicator\"\r\n                style={{ left: tapPosition.x, top: tapPosition.y }}\r\n              />\r\n            )}\r\n            {swipeOverlay && (\r\n              <div\r\n                className=\"swipe-overlay\"\r\n                style={{\r\n                  transform: `translate(${swipeOverlay.dx}px, ${swipeOverlay.dy}px)`,\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        </SwiperSlide>\r\n      ))}\r\n      <div className=\"swipe-hint\" />\r\n    </Swiper>\r\n  );\r\n}\r\n\r\nexport default MovieSwiper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}