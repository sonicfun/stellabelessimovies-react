{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonic\\\\OneDrive\\\\Documents\\\\FInal Version(Hopefully) for stella site\\\\stellabelessimovies\\\\src\\\\components\\\\MovieSwiper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './movieSwiper.css';\nimport 'swiper/css';\nimport 'swiper/css/effect-coverflow';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Autoplay, EffectCoverflow, FreeMode } from 'swiper/modules';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSwiper({\n  slides,\n  slideChange\n}) {\n  _s();\n  const [tapPosition, setTapPosition] = useState(null);\n\n  // Handle click/tap\n  const handleClick = (slideId, e) => {\n    console.log('Slide clicked:', slideId, e.type);\n    slideChange(slideId);\n    const rect = e.currentTarget.getBoundingClientRect();\n    let x, y;\n    if (e.touches && e.touches.length > 0) {\n      x = e.touches[0].clientX - rect.left;\n      y = e.touches[0].clientY - rect.top;\n    } else {\n      x = e.clientX - rect.left;\n      y = e.clientY - rect.top;\n    }\n    console.log('Tap position:', {\n      x,\n      y\n    });\n    setTapPosition({\n      x,\n      y\n    });\n    setTimeout(() => setTapPosition(null), 500);\n  };\n\n  // Handle pointer/touch move for debug\n  const handleMove = (index, e) => {\n    let pointerX, pointerY;\n    if (e.touches && e.touches.length > 0) {\n      pointerX = e.touches[0].clientX;\n      pointerY = e.touches[0].clientY;\n    } else {\n      pointerX = e.clientX;\n      pointerY = e.clientY;\n    }\n    if (pointerX && pointerY) {\n      console.log(`Pointer move on slide ${index}:`, {\n        x: pointerX,\n        y: pointerY\n      });\n    }\n  };\n\n  // Log slide changes with real index\n  const handleSlideChange = swiper => {\n    const realIndex = swiper.realIndex;\n    const slide = slides[realIndex];\n    console.log('Slide changed to real index:', realIndex, 'Slide ID:', slide._id);\n  };\n  return /*#__PURE__*/_jsxDEV(Swiper, {\n    effect: \"coverflow\",\n    grabCursor: true,\n    centeredSlides: true,\n    slidesPerView: \"auto\",\n    loop: true,\n    autoplay: {\n      delay: 2500,\n      disableOnInteraction: false\n    },\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true\n    },\n    freeMode: {\n      enabled: true,\n      momentum: true,\n      momentumVelocityRatio: 0.7,\n      momentumBounce: true,\n      momentumRatio: 1\n    },\n    touchRatio: 3.5,\n    threshold: 10,\n    resistance: true,\n    resistanceRatio: 0.85,\n    modules: [Autoplay, EffectCoverflow, FreeMode],\n    className: \"movieSwiper\",\n    onSlideChange: handleSlideChange,\n    children: [slides.map((slide, index) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide-content\",\n        onPointerMove: e => handleMove(index, e),\n        onPointerDown: e => console.log('Pointer down on slide', index, e.clientX, e.clientY),\n        onPointerUp: e => console.log('Pointer up on slide', index),\n        onTouchStart: e => console.log('Touch start on slide', index, e.touches),\n        onTouchMove: e => handleMove(index, e),\n        onTouchEnd: e => console.log('Touch end on slide', index),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: slide.previewImg,\n          alt: \"Preview\",\n          draggable: false,\n          onClick: e => handleClick(slide._id, e),\n          onTouchStart: e => handleClick(slide._id, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), tapPosition && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tap-indicator\",\n          style: {\n            left: tapPosition.x,\n            top: tapPosition.y\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, slide._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"swipe-hint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieSwiper, \"yv+R/GNfD+T37r2xHwpUNsqSEgw=\");\n_c = MovieSwiper;\nexport default MovieSwiper;\nvar _c;\n$RefreshReg$(_c, \"MovieSwiper\");","map":{"version":3,"names":["React","useState","Swiper","SwiperSlide","Autoplay","EffectCoverflow","FreeMode","jsxDEV","_jsxDEV","MovieSwiper","slides","slideChange","_s","tapPosition","setTapPosition","handleClick","slideId","e","console","log","type","rect","currentTarget","getBoundingClientRect","x","y","touches","length","clientX","left","clientY","top","setTimeout","handleMove","index","pointerX","pointerY","handleSlideChange","swiper","realIndex","slide","_id","effect","grabCursor","centeredSlides","slidesPerView","loop","autoplay","delay","disableOnInteraction","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","freeMode","enabled","momentum","momentumVelocityRatio","momentumBounce","momentumRatio","touchRatio","threshold","resistance","resistanceRatio","modules","className","onSlideChange","children","map","onPointerMove","onPointerDown","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","src","previewImg","alt","draggable","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","_c","$RefreshReg$"],"sources":["C:/Users/sonic/OneDrive/Documents/FInal Version(Hopefully) for stella site/stellabelessimovies/src/components/MovieSwiper.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './movieSwiper.css';\r\nimport 'swiper/css';\r\nimport 'swiper/css/effect-coverflow';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Autoplay, EffectCoverflow, FreeMode } from 'swiper/modules';\r\n\r\nfunction MovieSwiper({ slides, slideChange }) {\r\n  const [tapPosition, setTapPosition] = useState(null);\r\n\r\n  // Handle click/tap\r\n  const handleClick = (slideId, e) => {\r\n    console.log('Slide clicked:', slideId, e.type);\r\n    slideChange(slideId);\r\n\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    let x, y;\r\n    if (e.touches && e.touches.length > 0) {\r\n      x = e.touches[0].clientX - rect.left;\r\n      y = e.touches[0].clientY - rect.top;\r\n    } else {\r\n      x = e.clientX - rect.left;\r\n      y = e.clientY - rect.top;\r\n    }\r\n    console.log('Tap position:', { x, y });\r\n    setTapPosition({ x, y });\r\n    setTimeout(() => setTapPosition(null), 500);\r\n  };\r\n\r\n  // Handle pointer/touch move for debug\r\n  const handleMove = (index, e) => {\r\n    let pointerX, pointerY;\r\n    if (e.touches && e.touches.length > 0) {\r\n      pointerX = e.touches[0].clientX;\r\n      pointerY = e.touches[0].clientY;\r\n    } else {\r\n      pointerX = e.clientX;\r\n      pointerY = e.clientY;\r\n    }\r\n    if (pointerX && pointerY) {\r\n      console.log(`Pointer move on slide ${index}:`, { x: pointerX, y: pointerY });\r\n    }\r\n  };\r\n\r\n  // Log slide changes with real index\r\n  const handleSlideChange = (swiper) => {\r\n    const realIndex = swiper.realIndex;\r\n    const slide = slides[realIndex];\r\n    console.log('Slide changed to real index:', realIndex, 'Slide ID:', slide._id);\r\n  };\r\n\r\n  return (\r\n    <Swiper\r\n      effect=\"coverflow\"\r\n      grabCursor={true}\r\n      centeredSlides={true}\r\n      slidesPerView=\"auto\"\r\n      loop={true}\r\n      autoplay={{ delay: 2500, disableOnInteraction: false }}\r\n      coverflowEffect={{ rotate: 50, stretch: 0, depth: 100, modifier: 1, slideShadows: true }}\r\n      freeMode={{\r\n        enabled: true,\r\n        momentum: true,\r\n        momentumVelocityRatio: 0.7,\r\n        momentumBounce: true,\r\n        momentumRatio: 1,\r\n      }}\r\n      touchRatio={3.5}\r\n      threshold={10}\r\n      resistance={true}\r\n      resistanceRatio={0.85}\r\n      modules={[Autoplay, EffectCoverflow, FreeMode]}\r\n      className=\"movieSwiper\"\r\n      onSlideChange={handleSlideChange}\r\n    >\r\n      {slides.map((slide, index) => (\r\n        <SwiperSlide key={slide._id}>\r\n          <div\r\n            className=\"slide-content\"\r\n            onPointerMove={(e) => handleMove(index, e)}\r\n            onPointerDown={(e) => console.log('Pointer down on slide', index, e.clientX, e.clientY)}\r\n            onPointerUp={(e) => console.log('Pointer up on slide', index)}\r\n            onTouchStart={(e) => console.log('Touch start on slide', index, e.touches)}\r\n            onTouchMove={(e) => handleMove(index, e)}\r\n            onTouchEnd={(e) => console.log('Touch end on slide', index)}\r\n          >\r\n            <img\r\n              src={slide.previewImg}\r\n              alt=\"Preview\"\r\n              draggable={false}\r\n              onClick={(e) => handleClick(slide._id, e)}\r\n              onTouchStart={(e) => handleClick(slide._id, e)}\r\n            />\r\n            {tapPosition && (\r\n              <div\r\n                className=\"tap-indicator\"\r\n                style={{ left: tapPosition.x, top: tapPosition.y }}\r\n              />\r\n            )}\r\n          </div>\r\n        </SwiperSlide>\r\n      ))}\r\n      <div className=\"swipe-hint\" />\r\n    </Swiper>\r\n  );\r\n}\r\n\r\nexport default MovieSwiper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}