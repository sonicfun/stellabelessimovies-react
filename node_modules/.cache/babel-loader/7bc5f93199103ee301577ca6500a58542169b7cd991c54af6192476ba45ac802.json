{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./moviePoster.css';import Card from'../components/Card';//This javascript function is used for the buttons. The first is active as it shows all the movie posters \nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MoviePoster(){const filterList=[{_id:1,name:'All',active:true},{_id:2,name:'Drama',active:false},{_id:3,name:'Drama with documentary elements',active:false},{_id:4,name:'Black Comedy',active:false},{_id:5,name:'Thriller',active:false},{_id:6,name:'Horror',active:false}];//These are the javascript constants for the data, movies and filters\nconst[data,setData]=useState([]);const[movies,setMovies]=useState([]);const[filters,setFilters]=useState(filterList);//This is a fetch to collect the movie data from the folder data and the moviedata json!\nconst fetchData=()=>{fetch(process.env.PUBLIC_URL+'/data/movieData.json').then(res=>res.json()).then(data=>setData(data)).catch(e=>console.log(e.message));};useEffect(()=>{fetchData();},[]);useEffect(()=>{setMovies(data);},[data]);//This is a constant which communicates with the filters!\nconst handleFilterMovies=category=>{setFilters(filters.map(filter=>{filter.active=false;if(filter.name===category){filter.active=true;}return filter;}));if(category==='All'){setMovies(data);return;}setMovies(data.filter(movie=>movie.category===category));};//This is both the skeleton and react script which shows the section and communicates with the component card!\nreturn/*#__PURE__*/_jsx(\"section\",{id:\"movieposter\",className:\"movieposter\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"h4\",{className:\"section-title\",children:\"Available Now\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"filters\",children:filters.map(filter=>/*#__PURE__*/_jsx(\"li\",{className:\"\".concat(filter.active?'active':undefined),onClick:()=>{handleFilterMovies(filter.name);},children:filter.name},filter._id))})}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-5\",children:movies&&movies.length>0&&movies.map(movie=>/*#__PURE__*/_jsx(Card,{movie:movie},movie._id))})]})});}export default MoviePoster;","map":{"version":3,"names":["React","useState","useEffect","Card","jsx","_jsx","jsxs","_jsxs","MoviePoster","filterList","_id","name","active","data","setData","movies","setMovies","filters","setFilters","fetchData","fetch","process","env","PUBLIC_URL","then","res","json","catch","e","console","log","message","handleFilterMovies","category","map","filter","movie","id","className","children","concat","undefined","onClick","length"],"sources":["C:/Projects/stellabelessimovies/src/pages/MoviePoster.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './moviePoster.css';\r\nimport Card from '../components/Card';\r\n\r\n\r\n //This javascript function is used for the buttons. The first is active as it shows all the movie posters \r\nfunction MoviePoster() {\r\n     const filterList = [\r\n      {\r\n        _id: 1,\r\n        name: 'All',\r\n        active: true,\r\n      },\r\n      {\r\n        _id: 2,\r\n        name: 'Drama',\r\n        active: false,\r\n      },\r\n      {\r\n        _id: 3,\r\n        name: 'Drama with documentary elements',\r\n        active: false,\r\n      },\r\n      {\r\n        _id: 4,\r\n        name: 'Black Comedy',\r\n        active: false,\r\n      },\r\n      {\r\n        _id: 5,\r\n        name: 'Thriller',\r\n        active: false,\r\n      },\r\n      {\r\n        _id: 6,\r\n        name: 'Horror',\r\n        active: false,\r\n      },\r\n     ];\r\n\r\n\r\n //These are the javascript constants for the data, movies and filters\r\n    const [data, setData] =useState([]);\r\n    const [movies, setMovies]= useState([]);\r\n    const [filters, setFilters] = useState(filterList);\r\n\r\n\r\n     //This is a fetch to collect the movie data from the folder data and the moviedata json!\r\n    const fetchData = () =>{\r\n        fetch(process.env.PUBLIC_URL + '/data/movieData.json')\r\n        .then(res=>res.json())\r\n        .then(data =>setData(data))\r\n        .catch(e => console.log(e.message));\r\n    };\r\n\r\n    useEffect( ()=>{\r\n      fetchData();\r\n    }, []);\r\n\r\n    useEffect(() =>{\r\n      setMovies(data);\r\n    }, [data]);\r\n\r\n\r\n\r\n //This is a constant which communicates with the filters!\r\n    const handleFilterMovies = category => {\r\n       setFilters(\r\n        filters.map(filter => {\r\n          filter.active = false;\r\n            if (filter.name === category) {\r\n              filter.active = true;\r\n            }\r\n            return filter;\r\n            })\r\n       );\r\n\r\n\r\n        if(category==='All'){\r\n            setMovies(data);\r\n            return;\r\n        }\r\n       setMovies(data.filter(movie => movie.category === category));\r\n    };\r\n     \r\n\r\n     //This is both the skeleton and react script which shows the section and communicates with the component card!\r\n    return (\r\n      <section id=\"movieposter\" className='movieposter'>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <h4 className=\"section-title\">Available Now</h4>\r\n            </div>\r\n            <div className=\"row\">\r\n                 <ul className=\"filters\">\r\n                    {filters.map(filter => (\r\n                        <li \r\n                        key={filter._id}\r\n                        className={`${filter.active ? 'active' :undefined}`}\r\n                        onClick={() => {\r\n                            handleFilterMovies(filter.name);\r\n                        }}\r\n                        >\r\n                            {filter.name}</li>\r\n                    ))}\r\n                 </ul>\r\n            </div>\r\n            <div className=\"row mt-5\">\r\n                {movies && \r\n                movies.length> 0 && \r\n                movies.map(movie => <Card key={movie._id} movie={movie} />)}\r\n            </div>\r\n        </div>\r\n      </section> \r\n    );\r\n}\r\n\r\nexport default MoviePoster;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}