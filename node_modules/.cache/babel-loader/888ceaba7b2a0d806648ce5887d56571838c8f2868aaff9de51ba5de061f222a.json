{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonic\\\\OneDrive\\\\Documents\\\\FInal Version(Hopefully) for stella site\\\\stellabelessimovies\\\\src\\\\components\\\\MovieSwiper.jsx\",\n  _s = $RefreshSig$();\n// MovieSwiper.js\nimport React, { useRef } from 'react';\nimport './movieSwiper.css';\nimport 'swiper/css';\nimport 'swiper/css/effect-coverflow';\nimport 'swiper/css/pagination';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Autoplay, EffectCoverflow } from 'swiper/modules';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSwiper({\n  slides,\n  slideChange\n}) {\n  _s();\n  const swiperRef = useRef(null);\n  const touchDataRef = useRef({\n    startX: 0,\n    startY: 0,\n    startTime: 0,\n    isScrolling: false\n  });\n  const handleTouchStart = e => {\n    const touch = e.touches[0];\n    touchDataRef.current = {\n      startX: touch.clientX,\n      startY: touch.clientY,\n      startTime: Date.now(),\n      isScrolling: false\n    };\n  };\n  const handleTouchMove = e => {\n    if (!touchDataRef.current.startX || !touchDataRef.current.startY) return;\n    const touch = e.touches[0];\n    const deltaX = Math.abs(touch.clientX - touchDataRef.current.startX);\n    const deltaY = Math.abs(touch.clientY - touchDataRef.current.startY);\n\n    // If movement is primarily vertical or significant horizontal, mark as scrolling\n    if (deltaY > 5 || deltaX > 10) {\n      touchDataRef.current.isScrolling = true;\n    }\n  };\n  const handleSlideClick = (slideId, e) => {\n    // For mouse clicks\n    if (e.type === 'click') {\n      slideChange(slideId);\n      return;\n    }\n\n    // For touch events\n    if (e.type === 'touchend') {\n      const touch = e.changedTouches[0];\n      const endX = touch.clientX;\n      const endY = touch.clientY;\n      const endTime = Date.now();\n      const deltaX = Math.abs(endX - touchDataRef.current.startX);\n      const deltaY = Math.abs(endY - touchDataRef.current.startY);\n      const deltaTime = endTime - touchDataRef.current.startTime;\n\n      // Only trigger if it's a tap (not a scroll) and within time/distance thresholds\n      if (!touchDataRef.current.isScrolling && deltaTime < 300 && deltaX < 10 && deltaY < 10) {\n        e.preventDefault();\n        slideChange(slideId);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Swiper, {\n    effect: \"coverflow\",\n    grabCursor: true,\n    centeredSlides: true,\n    slidesPerView: 'auto',\n    loop: true,\n    autoplay: {\n      delay: 2500,\n      disableOnInteraction: false,\n      pauseOnMouseEnter: true\n    },\n    coverflowEffect: {\n      rotate: 40,\n      stretch: 0,\n      depth: 120,\n      modifier: 1,\n      slideShadows: true\n    },\n    modules: [Autoplay, EffectCoverflow],\n    className: \"movieSwiper\",\n    allowTouchMove: true,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    touchRatio: 1,\n    touchAngle: 45,\n    onSwiper: swiper => {\n      swiperRef.current = swiper;\n    },\n    children: slides.map(slide => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide-content\",\n        onClick: e => handleSlideClick(slide._id, e),\n        onTouchStart: handleTouchStart,\n        onTouchMove: handleTouchMove,\n        onTouchEnd: e => handleSlideClick(slide._id, e),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: slide.previewImg,\n          alt: \"Preview\",\n          draggable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, slide._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieSwiper, \"5GLVDJw450rzHaDdUcB3061tUHs=\");\n_c = MovieSwiper;\nexport default MovieSwiper;\nvar _c;\n$RefreshReg$(_c, \"MovieSwiper\");","map":{"version":3,"names":["React","useRef","Swiper","SwiperSlide","Autoplay","EffectCoverflow","jsxDEV","_jsxDEV","MovieSwiper","slides","slideChange","_s","swiperRef","touchDataRef","startX","startY","startTime","isScrolling","handleTouchStart","e","touch","touches","current","clientX","clientY","Date","now","handleTouchMove","deltaX","Math","abs","deltaY","handleSlideClick","slideId","type","changedTouches","endX","endY","endTime","deltaTime","preventDefault","effect","grabCursor","centeredSlides","slidesPerView","loop","autoplay","delay","disableOnInteraction","pauseOnMouseEnter","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","modules","className","allowTouchMove","simulateTouch","shortSwipes","longSwipes","touchRatio","touchAngle","onSwiper","swiper","children","map","slide","onClick","_id","onTouchStart","onTouchMove","onTouchEnd","src","previewImg","alt","draggable","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sonic/OneDrive/Documents/FInal Version(Hopefully) for stella site/stellabelessimovies/src/components/MovieSwiper.jsx"],"sourcesContent":["// MovieSwiper.js\r\nimport React, { useRef } from 'react';\r\nimport './movieSwiper.css';\r\nimport 'swiper/css';\r\nimport 'swiper/css/effect-coverflow';\r\nimport 'swiper/css/pagination';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Autoplay, EffectCoverflow } from 'swiper/modules';\r\n\r\nfunction MovieSwiper({ slides, slideChange }) {\r\n  const swiperRef = useRef(null);\r\n  const touchDataRef = useRef({\r\n    startX: 0,\r\n    startY: 0,\r\n    startTime: 0,\r\n    isScrolling: false\r\n  });\r\n\r\n  const handleTouchStart = (e) => {\r\n    const touch = e.touches[0];\r\n    touchDataRef.current = {\r\n      startX: touch.clientX,\r\n      startY: touch.clientY,\r\n      startTime: Date.now(),\r\n      isScrolling: false\r\n    };\r\n  };\r\n\r\n  const handleTouchMove = (e) => {\r\n    if (!touchDataRef.current.startX || !touchDataRef.current.startY) return;\r\n    \r\n    const touch = e.touches[0];\r\n    const deltaX = Math.abs(touch.clientX - touchDataRef.current.startX);\r\n    const deltaY = Math.abs(touch.clientY - touchDataRef.current.startY);\r\n    \r\n    // If movement is primarily vertical or significant horizontal, mark as scrolling\r\n    if (deltaY > 5 || deltaX > 10) {\r\n      touchDataRef.current.isScrolling = true;\r\n    }\r\n  };\r\n\r\n  const handleSlideClick = (slideId, e) => {\r\n    // For mouse clicks\r\n    if (e.type === 'click') {\r\n      slideChange(slideId);\r\n      return;\r\n    }\r\n\r\n    // For touch events\r\n    if (e.type === 'touchend') {\r\n      const touch = e.changedTouches[0];\r\n      const endX = touch.clientX;\r\n      const endY = touch.clientY;\r\n      const endTime = Date.now();\r\n      \r\n      const deltaX = Math.abs(endX - touchDataRef.current.startX);\r\n      const deltaY = Math.abs(endY - touchDataRef.current.startY);\r\n      const deltaTime = endTime - touchDataRef.current.startTime;\r\n      \r\n      // Only trigger if it's a tap (not a scroll) and within time/distance thresholds\r\n      if (!touchDataRef.current.isScrolling && deltaTime < 300 && deltaX < 10 && deltaY < 10) {\r\n        e.preventDefault();\r\n        slideChange(slideId);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Swiper\r\n      effect=\"coverflow\"\r\n      grabCursor={true}\r\n      centeredSlides={true}\r\n      slidesPerView={'auto'}\r\n      loop={true}\r\n      autoplay={{\r\n        delay: 2500,\r\n        disableOnInteraction: false,\r\n        pauseOnMouseEnter: true,\r\n      }}\r\n      coverflowEffect={{\r\n        rotate: 40,\r\n        stretch: 0,\r\n        depth: 120,\r\n        modifier: 1,\r\n        slideShadows: true,\r\n      }}\r\n      modules={[Autoplay, EffectCoverflow]}\r\n      className=\"movieSwiper\"\r\n      allowTouchMove={true}\r\n      simulateTouch={true}\r\n      shortSwipes={true}\r\n      longSwipes={true}\r\n      touchRatio={1}\r\n      touchAngle={45}\r\n      onSwiper={(swiper) => {\r\n        swiperRef.current = swiper;\r\n      }}\r\n    >\r\n      {slides.map((slide) => (\r\n        <SwiperSlide key={slide._id}>\r\n          <div\r\n            className=\"slide-content\"\r\n            onClick={(e) => handleSlideClick(slide._id, e)}\r\n            onTouchStart={handleTouchStart}\r\n            onTouchMove={handleTouchMove}\r\n            onTouchEnd={(e) => handleSlideClick(slide._id, e)}\r\n          >\r\n            <img\r\n              src={slide.previewImg}\r\n              alt=\"Preview\"\r\n              draggable={false}\r\n            />\r\n          </div>\r\n        </SwiperSlide>\r\n      ))}\r\n    </Swiper>\r\n  );\r\n}\r\n\r\nexport default MovieSwiper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}