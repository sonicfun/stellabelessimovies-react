{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonic\\\\OneDrive\\\\Documents\\\\FInal Version(Hopefully) for stella site\\\\stellabelessimovies\\\\src\\\\components\\\\MovieSwiper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './movieSwiper.css';\nimport 'swiper/css';\nimport 'swiper/css/effect-coverflow';\nimport 'swiper/css/free-mode';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Autoplay, EffectCoverflow, FreeMode } from 'swiper/modules';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSwiper({\n  slides,\n  slideChange\n}) {\n  _s();\n  const [loadedSlides, setLoadedSlides] = useState({});\n\n  // Mark slide as loaded\n  const handleImageLoad = id => {\n    setLoadedSlides(prev => ({\n      ...prev,\n      [id]: true\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Swiper, {\n    modules: [EffectCoverflow, Autoplay, FreeMode],\n    effect: \"coverflow\",\n    grabCursor: true,\n    centeredSlides: true,\n    slidesPerView: \"auto\",\n    loop: true,\n    loopedSlides: Math.min(slides.length, 10),\n    freeMode: {\n      enabled: true,\n      momentum: true\n    },\n    autoplay: {\n      delay: 2500,\n      disableOnInteraction: false\n    },\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true\n    },\n    touchRatio: 1,\n    threshold: 10 /* avoids accidental taps */,\n    resistance: true,\n    resistanceRatio: 0.85,\n    touchStartPreventDefault: false,\n    className: \"movieSwiper\",\n    onSlideChange: swiper => {\n      const activeSlide = slides[swiper.realIndex];\n      if (activeSlide) slideChange(activeSlide._id); // auto-select active slide\n    },\n    children: slides.map(slide => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide-content\",\n        onClick: () => slideChange(slide._id) // desktop click\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: slide.previewImg,\n          alt: slide.title || 'Preview',\n          draggable: false,\n          onLoad: () => handleImageLoad(slide._id),\n          className: loadedSlides[slide._id] ? 'loaded' : 'loading'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, slide._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieSwiper, \"/pFSmsjyNerymYC17rlVcMRosUE=\");\n_c = MovieSwiper;\nexport default MovieSwiper;\nvar _c;\n$RefreshReg$(_c, \"MovieSwiper\");","map":{"version":3,"names":["React","useState","useEffect","Swiper","SwiperSlide","Autoplay","EffectCoverflow","FreeMode","jsxDEV","_jsxDEV","MovieSwiper","slides","slideChange","_s","loadedSlides","setLoadedSlides","handleImageLoad","id","prev","modules","effect","grabCursor","centeredSlides","slidesPerView","loop","loopedSlides","Math","min","length","freeMode","enabled","momentum","autoplay","delay","disableOnInteraction","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","touchRatio","threshold","resistance","resistanceRatio","touchStartPreventDefault","className","onSlideChange","swiper","activeSlide","realIndex","_id","children","map","slide","onClick","src","previewImg","alt","title","draggable","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sonic/OneDrive/Documents/FInal Version(Hopefully) for stella site/stellabelessimovies/src/components/MovieSwiper.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './movieSwiper.css';\r\nimport 'swiper/css';\r\nimport 'swiper/css/effect-coverflow';\r\nimport 'swiper/css/free-mode';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Autoplay, EffectCoverflow, FreeMode } from 'swiper/modules';\r\n\r\nfunction MovieSwiper({ slides, slideChange }) {\r\n  const [loadedSlides, setLoadedSlides] = useState({});\r\n\r\n  // Mark slide as loaded\r\n  const handleImageLoad = (id) => {\r\n    setLoadedSlides(prev => ({ ...prev, [id]: true }));\r\n  };\r\n\r\n  return (\r\n    <Swiper\r\n      modules={[EffectCoverflow, Autoplay, FreeMode]}\r\n      effect=\"coverflow\"\r\n      grabCursor={true}\r\n      centeredSlides={true}\r\n      slidesPerView=\"auto\"\r\n      loop={true}\r\n      loopedSlides={Math.min(slides.length, 10)}\r\n      freeMode={{ enabled: true, momentum: true }}\r\n      autoplay={{ delay: 2500, disableOnInteraction: false }}\r\n      coverflowEffect={{ rotate: 50, stretch: 0, depth: 100, modifier: 1, slideShadows: true }}\r\n      touchRatio={1}\r\n      threshold={10} /* avoids accidental taps */\r\n      resistance={true}\r\n      resistanceRatio={0.85}\r\n      touchStartPreventDefault={false}\r\n      className=\"movieSwiper\"\r\n      onSlideChange={(swiper) => {\r\n        const activeSlide = slides[swiper.realIndex];\r\n        if (activeSlide) slideChange(activeSlide._id); // auto-select active slide\r\n      }}\r\n    >\r\n      {slides.map((slide) => (\r\n        <SwiperSlide key={slide._id}>\r\n          <div\r\n            className=\"slide-content\"\r\n            onClick={() => slideChange(slide._id)} // desktop click\r\n          >\r\n            <img\r\n              src={slide.previewImg}\r\n              alt={slide.title || 'Preview'}\r\n              draggable={false}\r\n              onLoad={() => handleImageLoad(slide._id)}\r\n              className={loadedSlides[slide._id] ? 'loaded' : 'loading'}\r\n            />\r\n          </div>\r\n        </SwiperSlide>\r\n      ))}\r\n    </Swiper>\r\n  );\r\n}\r\n\r\nexport default MovieSwiper;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,mBAAmB;AAC1B,OAAO,YAAY;AACnB,OAAO,6BAA6B;AACpC,OAAO,sBAAsB;AAC7B,SAASC,MAAM,EAAEC,WAAW,QAAQ,cAAc;AAClD,SAASC,QAAQ,EAAEC,eAAe,EAAEC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,SAASC,WAAWA,CAAC;EAAEC,MAAM;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEpD;EACA,MAAMe,eAAe,GAAIC,EAAE,IAAK;IAC9BF,eAAe,CAACG,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACD,EAAE,GAAG;IAAK,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,oBACER,OAAA,CAACN,MAAM;IACLgB,OAAO,EAAE,CAACb,eAAe,EAAED,QAAQ,EAAEE,QAAQ,CAAE;IAC/Ca,MAAM,EAAC,WAAW;IAClBC,UAAU,EAAE,IAAK;IACjBC,cAAc,EAAE,IAAK;IACrBC,aAAa,EAAC,MAAM;IACpBC,IAAI,EAAE,IAAK;IACXC,YAAY,EAAEC,IAAI,CAACC,GAAG,CAAChB,MAAM,CAACiB,MAAM,EAAE,EAAE,CAAE;IAC1CC,QAAQ,EAAE;MAAEC,OAAO,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAE;IAC5CC,QAAQ,EAAE;MAAEC,KAAK,EAAE,IAAI;MAAEC,oBAAoB,EAAE;IAAM,CAAE;IACvDC,eAAe,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,OAAO,EAAE,CAAC;MAAEC,KAAK,EAAE,GAAG;MAAEC,QAAQ,EAAE,CAAC;MAAEC,YAAY,EAAE;IAAK,CAAE;IACzFC,UAAU,EAAE,CAAE;IACdC,SAAS,EAAE,EAAG,CAAC;IACfC,UAAU,EAAE,IAAK;IACjBC,eAAe,EAAE,IAAK;IACtBC,wBAAwB,EAAE,KAAM;IAChCC,SAAS,EAAC,aAAa;IACvBC,aAAa,EAAGC,MAAM,IAAK;MACzB,MAAMC,WAAW,GAAGtC,MAAM,CAACqC,MAAM,CAACE,SAAS,CAAC;MAC5C,IAAID,WAAW,EAAErC,WAAW,CAACqC,WAAW,CAACE,GAAG,CAAC,CAAC,CAAC;IACjD,CAAE;IAAAC,QAAA,EAEDzC,MAAM,CAAC0C,GAAG,CAAEC,KAAK,iBAChB7C,OAAA,CAACL,WAAW;MAAAgD,QAAA,eACV3C,OAAA;QACEqC,SAAS,EAAC,eAAe;QACzBS,OAAO,EAAEA,CAAA,KAAM3C,WAAW,CAAC0C,KAAK,CAACH,GAAG,CAAE,CAAC;QAAA;QAAAC,QAAA,eAEvC3C,OAAA;UACE+C,GAAG,EAAEF,KAAK,CAACG,UAAW;UACtBC,GAAG,EAAEJ,KAAK,CAACK,KAAK,IAAI,SAAU;UAC9BC,SAAS,EAAE,KAAM;UACjBC,MAAM,EAAEA,CAAA,KAAM7C,eAAe,CAACsC,KAAK,CAACH,GAAG,CAAE;UACzCL,SAAS,EAAEhC,YAAY,CAACwC,KAAK,CAACH,GAAG,CAAC,GAAG,QAAQ,GAAG;QAAU;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC,GAZUX,KAAK,CAACH,GAAG;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAad,CACd;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb;AAACpD,EAAA,CAjDQH,WAAW;AAAAwD,EAAA,GAAXxD,WAAW;AAmDpB,eAAeA,WAAW;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}