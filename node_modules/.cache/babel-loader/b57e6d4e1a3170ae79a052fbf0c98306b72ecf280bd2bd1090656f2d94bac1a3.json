{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonic\\\\OneDrive\\\\Documents\\\\FInal Version(Hopefully) for stella site\\\\stellabelessimovies\\\\src\\\\components\\\\MovieSwiper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './movieSwiper.css';\nimport 'swiper/css';\nimport 'swiper/css/effect-coverflow';\nimport 'swiper/css/pagination';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Autoplay, EffectCoverflow } from 'swiper/modules';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSwiper({\n  slides,\n  slideChange\n}) {\n  _s();\n  const [tapPosition, setTapPosition] = useState(null);\n  return /*#__PURE__*/_jsxDEV(Swiper, {\n    effect: \"coverflow\",\n    grabCursor: true,\n    centeredSlides: true,\n    slidesPerView: 'auto',\n    loop: true,\n    autoplay: {\n      delay: 2500,\n      disableOnInteraction: false,\n      pauseOnMouseEnter: true\n    },\n    coverflowEffect: {\n      rotate: 40,\n      stretch: 0,\n      depth: 120,\n      modifier: 1,\n      slideShadows: true\n    },\n    modules: [Autoplay, EffectCoverflow],\n    className: \"movieSwiper\",\n    allowTouchMove: true,\n    simulateTouch: true,\n    touchStartPreventDefault: false,\n    shortSwipes: true,\n    longSwipes: true,\n    touchRatio: 1,\n    threshold: 5\n\n    // Swiper debug & slide click handler\n    ,\n    onSwiper: swiper => console.log('Swiper instance:', swiper),\n    onSlideChange: () => console.log('Slide Changed'),\n    onTouchStart: e => console.log('Swiper touch start', e),\n    onTouchMove: e => console.log('Swiper touch move', e),\n    onTouchEnd: e => console.log('Swiper touch end', e),\n    onSlideClick: (swiper, e) => {\n      const index = swiper.clickedIndex;\n      if (index != null) {\n        console.log('Slide clicked index:', index);\n        console.log('Slide clicked ID:', slides[index]._id);\n        slideChange(slides[index]._id);\n\n        // Show tap indicator\n        const rect = swiper.slides[index].getBoundingClientRect();\n        setTapPosition({\n          x: e.clientX - rect.left,\n          y: e.clientY - rect.top\n        });\n        setTimeout(() => setTapPosition(null), 500);\n      }\n      console.log('Slide click event type:', e.type);\n    },\n    children: slides.map((slide, idx) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: slide.previewImg,\n          alt: \"Preview\",\n          draggable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), tapPosition && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tap-indicator\",\n          style: {\n            left: tapPosition.x,\n            top: tapPosition.y\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, slide._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieSwiper, \"yv+R/GNfD+T37r2xHwpUNsqSEgw=\");\n_c = MovieSwiper;\nexport default MovieSwiper;\nvar _c;\n$RefreshReg$(_c, \"MovieSwiper\");","map":{"version":3,"names":["React","useState","Swiper","SwiperSlide","Autoplay","EffectCoverflow","jsxDEV","_jsxDEV","MovieSwiper","slides","slideChange","_s","tapPosition","setTapPosition","effect","grabCursor","centeredSlides","slidesPerView","loop","autoplay","delay","disableOnInteraction","pauseOnMouseEnter","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","modules","className","allowTouchMove","simulateTouch","touchStartPreventDefault","shortSwipes","longSwipes","touchRatio","threshold","onSwiper","swiper","console","log","onSlideChange","onTouchStart","e","onTouchMove","onTouchEnd","onSlideClick","index","clickedIndex","_id","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","setTimeout","type","children","map","slide","idx","src","previewImg","alt","draggable","fileName","_jsxFileName","lineNumber","columnNumber","style","_c","$RefreshReg$"],"sources":["C:/Users/sonic/OneDrive/Documents/FInal Version(Hopefully) for stella site/stellabelessimovies/src/components/MovieSwiper.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './movieSwiper.css';\r\nimport 'swiper/css';\r\nimport 'swiper/css/effect-coverflow';\r\nimport 'swiper/css/pagination';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Autoplay, EffectCoverflow } from 'swiper/modules';\r\n\r\nfunction MovieSwiper({ slides, slideChange }) {\r\n  const [tapPosition, setTapPosition] = useState(null);\r\n\r\n  return (\r\n    <Swiper\r\n      effect=\"coverflow\"\r\n      grabCursor={true}\r\n      centeredSlides={true}\r\n      slidesPerView={'auto'}\r\n      loop={true}\r\n      autoplay={{\r\n        delay: 2500,\r\n        disableOnInteraction: false,\r\n        pauseOnMouseEnter: true,\r\n      }}\r\n      coverflowEffect={{\r\n        rotate: 40,\r\n        stretch: 0,\r\n        depth: 120,\r\n        modifier: 1,\r\n        slideShadows: true,\r\n      }}\r\n      modules={[Autoplay, EffectCoverflow]}\r\n      className=\"movieSwiper\"\r\n      allowTouchMove={true}\r\n      simulateTouch={true}\r\n      touchStartPreventDefault={false}\r\n      shortSwipes={true}\r\n      longSwipes={true}\r\n      touchRatio={1}\r\n      threshold={5}\r\n\r\n      // Swiper debug & slide click handler\r\n      onSwiper={(swiper) => console.log('Swiper instance:', swiper)}\r\n      onSlideChange={() => console.log('Slide Changed')}\r\n      onTouchStart={(e) => console.log('Swiper touch start', e)}\r\n      onTouchMove={(e) => console.log('Swiper touch move', e)}\r\n      onTouchEnd={(e) => console.log('Swiper touch end', e)}\r\n      onSlideClick={(swiper, e) => {\r\n        const index = swiper.clickedIndex;\r\n        if (index != null) {\r\n          console.log('Slide clicked index:', index);\r\n          console.log('Slide clicked ID:', slides[index]._id);\r\n          slideChange(slides[index]._id);\r\n\r\n          // Show tap indicator\r\n          const rect = swiper.slides[index].getBoundingClientRect();\r\n          setTapPosition({ x: e.clientX - rect.left, y: e.clientY - rect.top });\r\n          setTimeout(() => setTapPosition(null), 500);\r\n        }\r\n        console.log('Slide click event type:', e.type);\r\n      }}\r\n    >\r\n      {slides.map((slide, idx) => (\r\n        <SwiperSlide key={slide._id}>\r\n          <div className=\"slide-content\">\r\n            <img\r\n              src={slide.previewImg}\r\n              alt=\"Preview\"\r\n              draggable={false}\r\n            />\r\n            {/* Tap indicator for mobile/tablet */}\r\n            {tapPosition && (\r\n              <div\r\n                className=\"tap-indicator\"\r\n                style={{ left: tapPosition.x, top: tapPosition.y }}\r\n              />\r\n            )}\r\n          </div>\r\n        </SwiperSlide>\r\n      ))}\r\n    </Swiper>\r\n  );\r\n}\r\n\r\nexport default MovieSwiper;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAC1B,OAAO,YAAY;AACnB,OAAO,6BAA6B;AACpC,OAAO,uBAAuB;AAC9B,SAASC,MAAM,EAAEC,WAAW,QAAQ,cAAc;AAClD,SAASC,QAAQ,EAAEC,eAAe,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,WAAWA,CAAC;EAAEC,MAAM;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEpD,oBACEM,OAAA,CAACL,MAAM;IACLY,MAAM,EAAC,WAAW;IAClBC,UAAU,EAAE,IAAK;IACjBC,cAAc,EAAE,IAAK;IACrBC,aAAa,EAAE,MAAO;IACtBC,IAAI,EAAE,IAAK;IACXC,QAAQ,EAAE;MACRC,KAAK,EAAE,IAAI;MACXC,oBAAoB,EAAE,KAAK;MAC3BC,iBAAiB,EAAE;IACrB,CAAE;IACFC,eAAe,EAAE;MACfC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,CAAC;MACVC,KAAK,EAAE,GAAG;MACVC,QAAQ,EAAE,CAAC;MACXC,YAAY,EAAE;IAChB,CAAE;IACFC,OAAO,EAAE,CAACzB,QAAQ,EAAEC,eAAe,CAAE;IACrCyB,SAAS,EAAC,aAAa;IACvBC,cAAc,EAAE,IAAK;IACrBC,aAAa,EAAE,IAAK;IACpBC,wBAAwB,EAAE,KAAM;IAChCC,WAAW,EAAE,IAAK;IAClBC,UAAU,EAAE,IAAK;IACjBC,UAAU,EAAE,CAAE;IACdC,SAAS,EAAE;;IAEX;IAAA;IACAC,QAAQ,EAAGC,MAAM,IAAKC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,MAAM,CAAE;IAC9DG,aAAa,EAAEA,CAAA,KAAMF,OAAO,CAACC,GAAG,CAAC,eAAe,CAAE;IAClDE,YAAY,EAAGC,CAAC,IAAKJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEG,CAAC,CAAE;IAC1DC,WAAW,EAAGD,CAAC,IAAKJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEG,CAAC,CAAE;IACxDE,UAAU,EAAGF,CAAC,IAAKJ,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEG,CAAC,CAAE;IACtDG,YAAY,EAAEA,CAACR,MAAM,EAAEK,CAAC,KAAK;MAC3B,MAAMI,KAAK,GAAGT,MAAM,CAACU,YAAY;MACjC,IAAID,KAAK,IAAI,IAAI,EAAE;QACjBR,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEO,KAAK,CAAC;QAC1CR,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEhC,MAAM,CAACuC,KAAK,CAAC,CAACE,GAAG,CAAC;QACnDxC,WAAW,CAACD,MAAM,CAACuC,KAAK,CAAC,CAACE,GAAG,CAAC;;QAE9B;QACA,MAAMC,IAAI,GAAGZ,MAAM,CAAC9B,MAAM,CAACuC,KAAK,CAAC,CAACI,qBAAqB,CAAC,CAAC;QACzDvC,cAAc,CAAC;UAAEwC,CAAC,EAAET,CAAC,CAACU,OAAO,GAAGH,IAAI,CAACI,IAAI;UAAEC,CAAC,EAAEZ,CAAC,CAACa,OAAO,GAAGN,IAAI,CAACO;QAAI,CAAC,CAAC;QACrEC,UAAU,CAAC,MAAM9C,cAAc,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC;MAC7C;MACA2B,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEG,CAAC,CAACgB,IAAI,CAAC;IAChD,CAAE;IAAAC,QAAA,EAEDpD,MAAM,CAACqD,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBACrBzD,OAAA,CAACJ,WAAW;MAAA0D,QAAA,eACVtD,OAAA;QAAKuB,SAAS,EAAC,eAAe;QAAA+B,QAAA,gBAC5BtD,OAAA;UACE0D,GAAG,EAAEF,KAAK,CAACG,UAAW;UACtBC,GAAG,EAAC,SAAS;UACbC,SAAS,EAAE;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,EAED5D,WAAW,iBACVL,OAAA;UACEuB,SAAS,EAAC,eAAe;UACzB2C,KAAK,EAAE;YAAElB,IAAI,EAAE3C,WAAW,CAACyC,CAAC;YAAEK,GAAG,EAAE9C,WAAW,CAAC4C;UAAE;QAAE;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC,GAdUT,KAAK,CAACb,GAAG;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAed,CACd;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb;AAAC7D,EAAA,CAzEQH,WAAW;AAAAkE,EAAA,GAAXlE,WAAW;AA2EpB,eAAeA,WAAW;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}