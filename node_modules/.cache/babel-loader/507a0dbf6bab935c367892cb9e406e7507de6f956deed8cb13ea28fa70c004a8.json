{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonic\\\\OneDrive\\\\Documents\\\\FInal Version(Hopefully) for stella site\\\\stellabelessimovies\\\\src\\\\components\\\\MovieSwiper.jsx\",\n  _s = $RefreshSig$();\n// MovieSwiper.js\nimport React, { useRef } from 'react';\nimport './movieSwiper.css';\nimport 'swiper/css';\nimport 'swiper/css/effect-coverflow';\nimport 'swiper/css/pagination';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Autoplay, EffectCoverflow } from 'swiper/modules';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSwiper({\n  slides,\n  slideChange\n}) {\n  _s();\n  const swiperRef = useRef(null);\n  const clickDataRef = useRef({\n    startX: 0,\n    startY: 0,\n    startTime: 0\n  });\n  const handlePointerDown = e => {\n    clickDataRef.current = {\n      startX: e.clientX || e.touches && e.touches[0].clientX || 0,\n      startY: e.clientY || e.touches && e.touches[0].clientY || 0,\n      startTime: Date.now()\n    };\n  };\n  const handleSlideClick = (slideId, e) => {\n    const endX = e.clientX || e.changedTouches && e.changedTouches[0].clientX || 0;\n    const endY = e.clientY || e.changedTouches && e.changedTouches[0].clientY || 0;\n    const endTime = Date.now();\n    const deltaX = Math.abs(endX - clickDataRef.current.startX);\n    const deltaY = Math.abs(endY - clickDataRef.current.startY);\n    const deltaTime = endTime - clickDataRef.current.startTime;\n\n    // Only trigger if it's a tap (< 300ms, < 10px movement)\n    if (deltaTime < 300 && deltaX < 10 && deltaY < 10) {\n      slideChange(slideId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Swiper, {\n    effect: \"coverflow\",\n    grabCursor: true,\n    centeredSlides: true,\n    slidesPerView: 'auto',\n    loop: true,\n    autoplay: {\n      delay: 2500,\n      disableOnInteraction: false,\n      pauseOnMouseEnter: true\n    },\n    coverflowEffect: {\n      rotate: 40,\n      stretch: 0,\n      depth: 120,\n      modifier: 1,\n      slideShadows: true\n    },\n    modules: [Autoplay, EffectCoverflow],\n    className: \"movieSwiper\",\n    allowTouchMove: true,\n    simulateTouch: true,\n    touchEventsTarget: \"container\",\n    threshold: 5,\n    onSwiper: swiper => {\n      swiperRef.current = swiper;\n    },\n    children: slides.map(slide => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide-content\",\n        onPointerDown: handlePointerDown,\n        onPointerUp: e => handleSlideClick(slide._id, e),\n        onTouchStart: handlePointerDown,\n        onTouchEnd: e => handleSlideClick(slide._id, e),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: slide.previewImg,\n          alt: \"Preview\",\n          draggable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, slide._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieSwiper, \"+cD0/SgqDV2Jq9hA+3xOGCYzgeE=\");\n_c = MovieSwiper;\nexport default MovieSwiper;\nvar _c;\n$RefreshReg$(_c, \"MovieSwiper\");","map":{"version":3,"names":["React","useRef","Swiper","SwiperSlide","Autoplay","EffectCoverflow","jsxDEV","_jsxDEV","MovieSwiper","slides","slideChange","_s","swiperRef","clickDataRef","startX","startY","startTime","handlePointerDown","e","current","clientX","touches","clientY","Date","now","handleSlideClick","slideId","endX","changedTouches","endY","endTime","deltaX","Math","abs","deltaY","deltaTime","effect","grabCursor","centeredSlides","slidesPerView","loop","autoplay","delay","disableOnInteraction","pauseOnMouseEnter","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","modules","className","allowTouchMove","simulateTouch","touchEventsTarget","threshold","onSwiper","swiper","children","map","slide","onPointerDown","onPointerUp","_id","onTouchStart","onTouchEnd","src","previewImg","alt","draggable","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sonic/OneDrive/Documents/FInal Version(Hopefully) for stella site/stellabelessimovies/src/components/MovieSwiper.jsx"],"sourcesContent":["// MovieSwiper.js\r\nimport React, { useRef } from 'react';\r\nimport './movieSwiper.css';\r\nimport 'swiper/css';\r\nimport 'swiper/css/effect-coverflow';\r\nimport 'swiper/css/pagination';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Autoplay, EffectCoverflow } from 'swiper/modules';\r\n\r\nfunction MovieSwiper({ slides, slideChange }) {\r\n  const swiperRef = useRef(null);\r\n  const clickDataRef = useRef({ startX: 0, startY: 0, startTime: 0 });\r\n\r\n  const handlePointerDown = (e) => {\r\n    clickDataRef.current = {\r\n      startX: e.clientX || (e.touches && e.touches[0].clientX) || 0,\r\n      startY: e.clientY || (e.touches && e.touches[0].clientY) || 0,\r\n      startTime: Date.now()\r\n    };\r\n  };\r\n\r\n  const handleSlideClick = (slideId, e) => {\r\n    const endX = e.clientX || (e.changedTouches && e.changedTouches[0].clientX) || 0;\r\n    const endY = e.clientY || (e.changedTouches && e.changedTouches[0].clientY) || 0;\r\n    const endTime = Date.now();\r\n    \r\n    const deltaX = Math.abs(endX - clickDataRef.current.startX);\r\n    const deltaY = Math.abs(endY - clickDataRef.current.startY);\r\n    const deltaTime = endTime - clickDataRef.current.startTime;\r\n    \r\n    // Only trigger if it's a tap (< 300ms, < 10px movement)\r\n    if (deltaTime < 300 && deltaX < 10 && deltaY < 10) {\r\n      slideChange(slideId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Swiper\r\n      effect=\"coverflow\"\r\n      grabCursor={true}\r\n      centeredSlides={true}\r\n      slidesPerView={'auto'}\r\n      loop={true}\r\n      autoplay={{\r\n        delay: 2500,\r\n        disableOnInteraction: false,\r\n        pauseOnMouseEnter: true,\r\n      }}\r\n      coverflowEffect={{\r\n        rotate: 40,\r\n        stretch: 0,\r\n        depth: 120,\r\n        modifier: 1,\r\n        slideShadows: true,\r\n      }}\r\n      modules={[Autoplay, EffectCoverflow]}\r\n      className=\"movieSwiper\"\r\n      allowTouchMove={true}\r\n      simulateTouch={true}\r\n      touchEventsTarget=\"container\"\r\n      threshold={5}\r\n      onSwiper={(swiper) => {\r\n        swiperRef.current = swiper;\r\n      }}\r\n    >\r\n      {slides.map((slide) => (\r\n        <SwiperSlide key={slide._id}>\r\n          <div\r\n            className=\"slide-content\"\r\n            onPointerDown={handlePointerDown}\r\n            onPointerUp={(e) => handleSlideClick(slide._id, e)}\r\n            onTouchStart={handlePointerDown}\r\n            onTouchEnd={(e) => handleSlideClick(slide._id, e)}\r\n          >\r\n            <img\r\n              src={slide.previewImg}\r\n              alt=\"Preview\"\r\n              draggable={false}\r\n            />\r\n          </div>\r\n        </SwiperSlide>\r\n      ))}\r\n    </Swiper>\r\n  );\r\n}\r\n\r\nexport default MovieSwiper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}