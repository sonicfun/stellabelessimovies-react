{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonic\\\\OneDrive\\\\Documents\\\\FInal Version(Hopefully) for stella site\\\\stellabelessimovies\\\\src\\\\components\\\\MovieSwiper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport './movieSwiper.css';\nimport 'swiper/css';\nimport 'swiper/css/effect-coverflow';\nimport 'swiper/css/free-mode';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Autoplay, EffectCoverflow, FreeMode, Navigation } from 'swiper/modules';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MovieSwiper({\n  slides,\n  slideChange,\n  autoplayDelay = 3000,\n  showNavigation = true,\n  coverflowDepth = 100,\n  coverflowRotate = 0,\n  coverflowStretch = 0\n}) {\n  _s();\n  const [tapPosition, setTapPosition] = useState(null);\n  const swiperRef = useRef(null);\n  const handleClick = useCallback((slideId, e) => {\n    slideChange(slideId);\n\n    // Get tap position for animation\n    let clientX, clientY;\n    if (e.type.startsWith(\"touch\")) {\n      const touch = e.touches[0] || e.changedTouches[0];\n      clientX = touch.clientX;\n      clientY = touch.clientY;\n    } else {\n      clientX = e.clientX;\n      clientY = e.clientY;\n    }\n    const rect = e.currentTarget.getBoundingClientRect();\n    setTapPosition({\n      x: clientX - rect.left,\n      y: clientY - rect.top\n    });\n    setTimeout(() => setTapPosition(null), 500);\n  }, [slideChange]);\n\n  // Custom navigation handlers\n  const handlePrev = useCallback(() => {\n    if (swiperRef.current) {\n      swiperRef.current.swiper.slidePrev();\n    }\n  }, []);\n  const handleNext = useCallback(() => {\n    if (swiperRef.current) {\n      swiperRef.current.swiper.slideNext();\n    }\n  }, []);\n  const swiperParams = {\n    effect: 'coverflow',\n    grabCursor: true,\n    centeredSlides: true,\n    slidesPerView: 'auto',\n    coverflowEffect: {\n      rotate: coverflowRotate,\n      stretch: coverflowStretch,\n      depth: coverflowDepth,\n      modifier: 1,\n      slideShadows: true\n    },\n    freeMode: {\n      enabled: true,\n      sticky: true\n    },\n    autoplay: {\n      delay: autoplayDelay,\n      disableOnInteraction: false,\n      pauseOnMouseEnter: true\n    },\n    modules: [Autoplay, EffectCoverflow, FreeMode, Navigation],\n    breakpoints: {\n      320: {\n        slidesPerView: 1,\n        spaceBetween: 10\n      },\n      480: {\n        slidesPerView: 2,\n        spaceBetween: 20\n      },\n      768: {\n        slidesPerView: 3,\n        spaceBetween: 30\n      },\n      1024: {\n        slidesPerView: 4,\n        spaceBetween: 40\n      }\n    },\n    onSlideChange: swiper => {\n      // Optional: Add callback when slide changes\n      console.log('Slide changed to:', swiper.activeIndex);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieSwiper-container\",\n    children: [/*#__PURE__*/_jsxDEV(Swiper, {\n      ...swiperParams,\n      ref: swiperRef,\n      className: \"movieSwiper\",\n      children: slides.map((slide, index) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slide-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: slide.image || slide.poster,\n            alt: slide.title || `Slide ${index + 1}`,\n            onClick: e => handleClick(slide._id, e),\n            onTouchStart: e => handleClick(slide._id, e),\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), tapPosition && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tap-indicator\",\n            style: {\n              left: `${tapPosition.x}px`,\n              top: `${tapPosition.y}px`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), slide.title && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slide-title\",\n            children: slide.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, slide._id || index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), showNavigation && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-nav custom-prev\",\n        onClick: handlePrev,\n        \"aria-label\": \"Previous slide\",\n        children: \"\\u2039\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-nav custom-next\",\n        onClick: handleNext,\n        \"aria-label\": \"Next slide\",\n        children: \"\\u203A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieSwiper, \"X561NgoOVAR+RcLMPe5EHcWFn2k=\");\n_c = MovieSwiper;\nexport default MovieSwiper;\nvar _c;\n$RefreshReg$(_c, \"MovieSwiper\");","map":{"version":3,"names":["React","useState","useRef","useCallback","Swiper","SwiperSlide","Autoplay","EffectCoverflow","FreeMode","Navigation","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieSwiper","slides","slideChange","autoplayDelay","showNavigation","coverflowDepth","coverflowRotate","coverflowStretch","_s","tapPosition","setTapPosition","swiperRef","handleClick","slideId","e","clientX","clientY","type","startsWith","touch","touches","changedTouches","rect","currentTarget","getBoundingClientRect","x","left","y","top","setTimeout","handlePrev","current","swiper","slidePrev","handleNext","slideNext","swiperParams","effect","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","freeMode","enabled","sticky","autoplay","delay","disableOnInteraction","pauseOnMouseEnter","modules","breakpoints","spaceBetween","onSlideChange","console","log","activeIndex","className","children","ref","map","slide","index","src","image","poster","alt","title","onClick","_id","onTouchStart","loading","fileName","_jsxFileName","lineNumber","columnNumber","style","_c","$RefreshReg$"],"sources":["C:/Users/sonic/OneDrive/Documents/FInal Version(Hopefully) for stella site/stellabelessimovies/src/components/MovieSwiper.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport './movieSwiper.css';\r\nimport 'swiper/css';\r\nimport 'swiper/css/effect-coverflow';\r\nimport 'swiper/css/free-mode';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Autoplay, EffectCoverflow, FreeMode, Navigation } from 'swiper/modules';\r\n\r\nfunction MovieSwiper({ \r\n  slides, \r\n  slideChange, \r\n  autoplayDelay = 3000,\r\n  showNavigation = true,\r\n  coverflowDepth = 100,\r\n  coverflowRotate = 0,\r\n  coverflowStretch = 0 \r\n}) {\r\n  const [tapPosition, setTapPosition] = useState(null);\r\n  const swiperRef = useRef(null);\r\n\r\n  const handleClick = useCallback((slideId, e) => {\r\n    slideChange(slideId);\r\n    \r\n    // Get tap position for animation\r\n    let clientX, clientY;\r\n    if (e.type.startsWith(\"touch\")) {\r\n      const touch = e.touches[0] || e.changedTouches[0];\r\n      clientX = touch.clientX;\r\n      clientY = touch.clientY;\r\n    } else {\r\n      clientX = e.clientX;\r\n      clientY = e.clientY;\r\n    }\r\n    \r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    setTapPosition({ \r\n      x: clientX - rect.left, \r\n      y: clientY - rect.top \r\n    });\r\n    \r\n    setTimeout(() => setTapPosition(null), 500);\r\n  }, [slideChange]);\r\n\r\n  // Custom navigation handlers\r\n  const handlePrev = useCallback(() => {\r\n    if (swiperRef.current) {\r\n      swiperRef.current.swiper.slidePrev();\r\n    }\r\n  }, []);\r\n\r\n  const handleNext = useCallback(() => {\r\n    if (swiperRef.current) {\r\n      swiperRef.current.swiper.slideNext();\r\n    }\r\n  }, []);\r\n\r\n  const swiperParams = {\r\n    effect: 'coverflow',\r\n    grabCursor: true,\r\n    centeredSlides: true,\r\n    slidesPerView: 'auto',\r\n    coverflowEffect: {\r\n      rotate: coverflowRotate,\r\n      stretch: coverflowStretch,\r\n      depth: coverflowDepth,\r\n      modifier: 1,\r\n      slideShadows: true,\r\n    },\r\n    freeMode: {\r\n      enabled: true,\r\n      sticky: true,\r\n    },\r\n    autoplay: {\r\n      delay: autoplayDelay,\r\n      disableOnInteraction: false,\r\n      pauseOnMouseEnter: true,\r\n    },\r\n    modules: [Autoplay, EffectCoverflow, FreeMode, Navigation],\r\n    breakpoints: {\r\n      320: {\r\n        slidesPerView: 1,\r\n        spaceBetween: 10,\r\n      },\r\n      480: {\r\n        slidesPerView: 2,\r\n        spaceBetween: 20,\r\n      },\r\n      768: {\r\n        slidesPerView: 3,\r\n        spaceBetween: 30,\r\n      },\r\n      1024: {\r\n        slidesPerView: 4,\r\n        spaceBetween: 40,\r\n      },\r\n    },\r\n    onSlideChange: (swiper) => {\r\n      // Optional: Add callback when slide changes\r\n      console.log('Slide changed to:', swiper.activeIndex);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"movieSwiper-container\">\r\n      <Swiper \r\n        {...swiperParams} \r\n        ref={swiperRef}\r\n        className=\"movieSwiper\"\r\n      >\r\n        {slides.map((slide, index) => (\r\n          <SwiperSlide key={slide._id || index}>\r\n            <div className=\"slide-content\">\r\n              <img \r\n                src={slide.image || slide.poster} \r\n                alt={slide.title || `Slide ${index + 1}`}\r\n                onClick={(e) => handleClick(slide._id, e)}\r\n                onTouchStart={(e) => handleClick(slide._id, e)}\r\n                loading=\"lazy\"\r\n              />\r\n              {tapPosition && (\r\n                <div \r\n                  className=\"tap-indicator\"\r\n                  style={{\r\n                    left: `${tapPosition.x}px`,\r\n                    top: `${tapPosition.y}px`\r\n                  }}\r\n                />\r\n              )}\r\n              \r\n              {/* Optional: Add title overlay */}\r\n              {slide.title && (\r\n                <div className=\"slide-title\">\r\n                  {slide.title}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n\r\n      {/* Custom Navigation Buttons */}\r\n      {showNavigation && (\r\n        <>\r\n          <button \r\n            className=\"custom-nav custom-prev\" \r\n            onClick={handlePrev}\r\n            aria-label=\"Previous slide\"\r\n          >\r\n            ‹\r\n          </button>\r\n          <button \r\n            className=\"custom-nav custom-next\" \r\n            onClick={handleNext}\r\n            aria-label=\"Next slide\"\r\n          >\r\n            ›\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieSwiper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}