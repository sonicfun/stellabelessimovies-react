{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonic\\\\OneDrive\\\\Documents\\\\FInal Version(Hopefully) for stella site\\\\stellabelessimovies\\\\src\\\\components\\\\MovieSwiper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './movieSwiper.css';\nimport 'swiper/css';\nimport 'swiper/css/effect-coverflow';\nimport 'swiper/css/free-mode';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Autoplay, EffectCoverflow, FreeMode } from 'swiper/modules';\nimport PlayBtn from './PlayBtn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSwiper({\n  slides,\n  slideChange\n}) {\n  _s();\n  const [loadedSlides, setLoadedSlides] = useState({});\n  const [moviePlaying, setMoviePlaying] = useState(false); // ðŸ”¥ track modal state\n\n  // Mark slide as loaded\n  const handleImageLoad = id => {\n    setLoadedSlides(prev => ({\n      ...prev,\n      [id]: true\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `movieSwiper-wrapper ${moviePlaying ? 'disabled' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(Swiper, {\n      modules: [EffectCoverflow, Autoplay, FreeMode],\n      effect: \"coverflow\",\n      grabCursor: !moviePlaying // disable grab when modal is open\n      ,\n      centeredSlides: true,\n      slidesPerView: \"auto\",\n      loop: true,\n      loopedSlides: Math.min(slides.length, 10),\n      freeMode: {\n        enabled: !moviePlaying,\n        momentum: true\n      } // disable free mode when playing\n      ,\n      autoplay: moviePlaying ? false : {\n        delay: 2500,\n        disableOnInteraction: false\n      },\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: true\n      },\n      touchRatio: moviePlaying ? 0 : 1 // no swipes\n      ,\n      threshold: 10,\n      resistance: !moviePlaying,\n      resistanceRatio: 0.85,\n      touchStartPreventDefault: false,\n      className: \"movieSwiper\",\n      onSlideChange: swiper => {\n        if (!moviePlaying) {\n          const activeSlide = slides[swiper.realIndex];\n          if (activeSlide) slideChange(activeSlide._id);\n        }\n      },\n      children: slides.map(slide => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slide-content\",\n          onClick: () => !moviePlaying && slideChange(slide._id) // disable click while playing\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: slide.previewImg,\n            alt: slide.title || 'Preview',\n            draggable: false,\n            onLoad: () => handleImageLoad(slide._id),\n            className: loadedSlides[slide._id] ? 'loaded' : 'loading'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PlayBtn, {\n            movie: slide,\n            onPlayChange: state => setMoviePlaying(state)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, slide._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieSwiper, \"UlS2tGoAWHCt6b8E9pRUC3uj0hw=\");\n_c = MovieSwiper;\nexport default MovieSwiper;\nvar _c;\n$RefreshReg$(_c, \"MovieSwiper\");","map":{"version":3,"names":["React","useState","useEffect","Swiper","SwiperSlide","Autoplay","EffectCoverflow","FreeMode","PlayBtn","jsxDEV","_jsxDEV","MovieSwiper","slides","slideChange","_s","loadedSlides","setLoadedSlides","moviePlaying","setMoviePlaying","handleImageLoad","id","prev","className","children","modules","effect","grabCursor","centeredSlides","slidesPerView","loop","loopedSlides","Math","min","length","freeMode","enabled","momentum","autoplay","delay","disableOnInteraction","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","touchRatio","threshold","resistance","resistanceRatio","touchStartPreventDefault","onSlideChange","swiper","activeSlide","realIndex","_id","map","slide","onClick","src","previewImg","alt","title","draggable","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","movie","onPlayChange","state","_c","$RefreshReg$"],"sources":["C:/Users/sonic/OneDrive/Documents/FInal Version(Hopefully) for stella site/stellabelessimovies/src/components/MovieSwiper.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './movieSwiper.css';\r\nimport 'swiper/css';\r\nimport 'swiper/css/effect-coverflow';\r\nimport 'swiper/css/free-mode';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Autoplay, EffectCoverflow, FreeMode } from 'swiper/modules';\r\nimport PlayBtn from './PlayBtn';\r\n\r\nfunction MovieSwiper({ slides, slideChange }) {\r\n  const [loadedSlides, setLoadedSlides] = useState({});\r\n  const [moviePlaying, setMoviePlaying] = useState(false); // ðŸ”¥ track modal state\r\n\r\n  // Mark slide as loaded\r\n  const handleImageLoad = (id) => {\r\n    setLoadedSlides(prev => ({ ...prev, [id]: true }));\r\n  };\r\n\r\n  return (\r\n    <div className={`movieSwiper-wrapper ${moviePlaying ? 'disabled' : ''}`}>\r\n      <Swiper\r\n        modules={[EffectCoverflow, Autoplay, FreeMode]}\r\n        effect=\"coverflow\"\r\n        grabCursor={!moviePlaying}         // disable grab when modal is open\r\n        centeredSlides={true}\r\n        slidesPerView=\"auto\"\r\n        loop={true}\r\n        loopedSlides={Math.min(slides.length, 10)}\r\n        freeMode={{ enabled: !moviePlaying, momentum: true }} // disable free mode when playing\r\n        autoplay={moviePlaying ? false : { delay: 2500, disableOnInteraction: false }}\r\n        coverflowEffect={{\r\n          rotate: 50,\r\n          stretch: 0,\r\n          depth: 100,\r\n          modifier: 1,\r\n          slideShadows: true\r\n        }}\r\n        touchRatio={moviePlaying ? 0 : 1} // no swipes\r\n        threshold={10}\r\n        resistance={!moviePlaying}\r\n        resistanceRatio={0.85}\r\n        touchStartPreventDefault={false}\r\n        className=\"movieSwiper\"\r\n        onSlideChange={(swiper) => {\r\n          if (!moviePlaying) {\r\n            const activeSlide = slides[swiper.realIndex];\r\n            if (activeSlide) slideChange(activeSlide._id);\r\n          }\r\n        }}\r\n      >\r\n        {slides.map((slide) => (\r\n          <SwiperSlide key={slide._id}>\r\n            <div\r\n              className=\"slide-content\"\r\n              onClick={() => !moviePlaying && slideChange(slide._id)} // disable click while playing\r\n            >\r\n              <img\r\n                src={slide.previewImg}\r\n                alt={slide.title || 'Preview'}\r\n                draggable={false}\r\n                onLoad={() => handleImageLoad(slide._id)}\r\n                className={loadedSlides[slide._id] ? 'loaded' : 'loading'}\r\n              />\r\n              {/* ðŸ”¥ Put play button here */}\r\n              <PlayBtn\r\n                movie={slide}\r\n                onPlayChange={(state) => setMoviePlaying(state)}\r\n              />\r\n            </div>\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieSwiper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}