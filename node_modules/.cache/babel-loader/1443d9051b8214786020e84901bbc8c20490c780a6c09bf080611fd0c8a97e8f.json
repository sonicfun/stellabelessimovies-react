{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonic\\\\OneDrive\\\\Documents\\\\FInal Version(Hopefully) for stella site\\\\stellabelessimovies\\\\src\\\\components\\\\MovieSwiper.jsx\",\n  _s = $RefreshSig$();\n// MovieSwiper.js\nimport React, { useRef } from 'react';\nimport './movieSwiper.css';\nimport 'swiper/css';\nimport 'swiper/css/effect-coverflow';\nimport 'swiper/css/pagination';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Autoplay, EffectCoverflow } from 'swiper/modules';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSwiper({\n  slides,\n  slideChange\n}) {\n  _s();\n  const swiperRef = useRef(null);\n  const touchDataRef = useRef({\n    startX: 0,\n    startY: 0,\n    startTime: 0\n  });\n  const handleSlideInteraction = slideId => {\n    const {\n      startX,\n      startY,\n      startTime\n    } = touchDataRef.current;\n    const now = Date.now();\n    const timeDiff = now - startTime;\n\n    // Only trigger click if it was a quick tap with minimal movement\n    // This data should be set by Swiper's own touch tracking\n    if (timeDiff < 300 && timeDiff > 0) {\n      slideChange(slideId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Swiper, {\n    effect: \"coverflow\",\n    grabCursor: true,\n    centeredSlides: true,\n    slidesPerView: 'auto',\n    loop: true,\n    autoplay: {\n      delay: 2500,\n      disableOnInteraction: false,\n      pauseOnMouseEnter: true\n    },\n    coverflowEffect: {\n      rotate: 40,\n      stretch: 0,\n      depth: 120,\n      modifier: 1,\n      slideShadows: true\n    },\n    modules: [Autoplay, EffectCoverflow],\n    className: \"movieSwiper\",\n    allowTouchMove: true,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    touchRatio: 1,\n    touchAngle: 45,\n    resistanceRatio: 0.85,\n    onSwiper: swiper => {\n      swiperRef.current = swiper;\n    },\n    onTouchStart: (swiper, e) => {\n      touchDataRef.current = {\n        startX: e.touches ? e.touches[0].clientX : e.clientX,\n        startY: e.touches ? e.touches[0].clientY : e.clientY,\n        startTime: Date.now()\n      };\n    },\n    onClick: (swiper, e) => {\n      e.preventDefault();\n      const clickedSlide = swiper.clickedSlide;\n      if (clickedSlide && clickedSlide.dataset && clickedSlide.dataset.slideId) {\n        const timeSinceStart = Date.now() - touchDataRef.current.startTime;\n        // Only trigger on quick taps/clicks (not after swiping)\n        if (timeSinceStart < 300) {\n          handleSlideInteraction(clickedSlide.dataset.slideId);\n        }\n      }\n    },\n    children: slides.map(slide => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n      \"data-slide-id\": slide._id,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide-content\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: slide.previewImg,\n          alt: \"Preview\",\n          draggable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, slide._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieSwiper, \"5GLVDJw450rzHaDdUcB3061tUHs=\");\n_c = MovieSwiper;\nexport default MovieSwiper;\nvar _c;\n$RefreshReg$(_c, \"MovieSwiper\");","map":{"version":3,"names":["React","useRef","Swiper","SwiperSlide","Autoplay","EffectCoverflow","jsxDEV","_jsxDEV","MovieSwiper","slides","slideChange","_s","swiperRef","touchDataRef","startX","startY","startTime","handleSlideInteraction","slideId","current","now","Date","timeDiff","effect","grabCursor","centeredSlides","slidesPerView","loop","autoplay","delay","disableOnInteraction","pauseOnMouseEnter","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","modules","className","allowTouchMove","simulateTouch","shortSwipes","longSwipes","touchRatio","touchAngle","resistanceRatio","onSwiper","swiper","onTouchStart","e","touches","clientX","clientY","onClick","preventDefault","clickedSlide","dataset","timeSinceStart","children","map","slide","_id","src","previewImg","alt","draggable","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sonic/OneDrive/Documents/FInal Version(Hopefully) for stella site/stellabelessimovies/src/components/MovieSwiper.jsx"],"sourcesContent":["// MovieSwiper.js\r\nimport React, { useRef } from 'react';\r\nimport './movieSwiper.css';\r\nimport 'swiper/css';\r\nimport 'swiper/css/effect-coverflow';\r\nimport 'swiper/css/pagination';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Autoplay, EffectCoverflow } from 'swiper/modules';\r\n\r\nfunction MovieSwiper({ slides, slideChange }) {\r\n  const swiperRef = useRef(null);\r\n  const touchDataRef = useRef({ startX: 0, startY: 0, startTime: 0 });\r\n\r\n  const handleSlideInteraction = (slideId) => {\r\n    const { startX, startY, startTime } = touchDataRef.current;\r\n    const now = Date.now();\r\n    const timeDiff = now - startTime;\r\n    \r\n    // Only trigger click if it was a quick tap with minimal movement\r\n    // This data should be set by Swiper's own touch tracking\r\n    if (timeDiff < 300 && timeDiff > 0) {\r\n      slideChange(slideId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Swiper\r\n      effect=\"coverflow\"\r\n      grabCursor={true}\r\n      centeredSlides={true}\r\n      slidesPerView={'auto'}\r\n      loop={true}\r\n      autoplay={{\r\n        delay: 2500,\r\n        disableOnInteraction: false,\r\n        pauseOnMouseEnter: true,\r\n      }}\r\n      coverflowEffect={{\r\n        rotate: 40,\r\n        stretch: 0,\r\n        depth: 120,\r\n        modifier: 1,\r\n        slideShadows: true,\r\n      }}\r\n      modules={[Autoplay, EffectCoverflow]}\r\n      className=\"movieSwiper\"\r\n      allowTouchMove={true}\r\n      simulateTouch={true}\r\n      shortSwipes={true}\r\n      longSwipes={true}\r\n      touchRatio={1}\r\n      touchAngle={45}\r\n      resistanceRatio={0.85}\r\n      onSwiper={(swiper) => {\r\n        swiperRef.current = swiper;\r\n      }}\r\n      onTouchStart={(swiper, e) => {\r\n        touchDataRef.current = {\r\n          startX: e.touches ? e.touches[0].clientX : e.clientX,\r\n          startY: e.touches ? e.touches[0].clientY : e.clientY,\r\n          startTime: Date.now()\r\n        };\r\n      }}\r\n      onClick={(swiper, e) => {\r\n        e.preventDefault();\r\n        const clickedSlide = swiper.clickedSlide;\r\n        if (clickedSlide && clickedSlide.dataset && clickedSlide.dataset.slideId) {\r\n          const timeSinceStart = Date.now() - touchDataRef.current.startTime;\r\n          // Only trigger on quick taps/clicks (not after swiping)\r\n          if (timeSinceStart < 300) {\r\n            handleSlideInteraction(clickedSlide.dataset.slideId);\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      {slides.map((slide) => (\r\n        <SwiperSlide \r\n          key={slide._id}\r\n          data-slide-id={slide._id}\r\n        >\r\n          <div className=\"slide-content\">\r\n            <img\r\n              src={slide.previewImg}\r\n              alt=\"Preview\"\r\n              draggable={false}\r\n            />\r\n          </div>\r\n        </SwiperSlide>\r\n      ))}\r\n    </Swiper>\r\n  );\r\n}\r\n\r\nexport default MovieSwiper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}