{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonic\\\\OneDrive\\\\Documents\\\\FInal Version(Hopefully) for stella site\\\\stellabelessimovies\\\\src\\\\components\\\\MovieSwiper.jsx\",\n  _s = $RefreshSig$();\n// MovieSwiper.js\nimport React, { useRef } from 'react';\nimport './movieSwiper.css';\nimport 'swiper/css';\nimport 'swiper/css/effect-coverflow';\nimport 'swiper/css/pagination';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Autoplay, EffectCoverflow } from 'swiper/modules';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSwiper({\n  slides,\n  slideChange\n}) {\n  _s();\n  const swiperRef = useRef(null);\n  const isDraggingRef = useRef(false);\n  const startPosRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const handleTouchStart = e => {\n    isDraggingRef.current = false;\n    const touch = e.touches ? e.touches[0] : e;\n    startPosRef.current = {\n      x: touch.clientX,\n      y: touch.clientY,\n      time: Date.now()\n    };\n  };\n  const handleTouchMove = e => {\n    if (!startPosRef.current.x) return;\n    const touch = e.touches ? e.touches[0] : e;\n    const diffX = Math.abs(touch.clientX - startPosRef.current.x);\n    const diffY = Math.abs(touch.clientY - startPosRef.current.y);\n\n    // If moved more than 5px, consider it a drag\n    if (diffX > 5 || diffY > 5) {\n      isDraggingRef.current = true;\n    }\n  };\n  const handleSlideClick = (slideId, e) => {\n    // Check if this was a quick tap (less than 300ms) with minimal movement\n    const timeDiff = Date.now() - (startPosRef.current.time || 0);\n    const isQuickTap = timeDiff < 300;\n\n    // Prevent click if user was dragging (but allow quick taps)\n    if (isDraggingRef.current && !isQuickTap) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    slideChange(slideId);\n  };\n  return /*#__PURE__*/_jsxDEV(Swiper, {\n    effect: \"coverflow\",\n    grabCursor: true,\n    centeredSlides: true,\n    slidesPerView: 'auto',\n    loop: true,\n    autoplay: {\n      delay: 2500,\n      disableOnInteraction: false,\n      pauseOnMouseEnter: true\n    },\n    coverflowEffect: {\n      rotate: 40,\n      stretch: 0,\n      depth: 120,\n      modifier: 1,\n      slideShadows: true\n    },\n    modules: [Autoplay, EffectCoverflow],\n    className: \"movieSwiper\",\n    allowTouchMove: true,\n    simulateTouch: true,\n    slideToClickedSlide: false // Disabled to prevent interference\n    ,\n    watchSlidesProgress: true,\n    passiveListeners: false // Changed to false for better click handling\n    ,\n    onSwiper: swiper => {\n      swiperRef.current = swiper;\n    },\n    children: slides.map(slide => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide-content\",\n        onClick: e => handleSlideClick(slide._id, e),\n        onTouchStart: handleTouchStart,\n        onTouchMove: handleTouchMove,\n        onMouseDown: handleTouchStart,\n        onMouseMove: handleTouchMove,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: slide.previewImg,\n          alt: \"Preview\",\n          draggable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, slide._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieSwiper, \"Y+tzMDDDMxhbw8gTXAShiofq/YA=\");\n_c = MovieSwiper;\nexport default MovieSwiper;\nvar _c;\n$RefreshReg$(_c, \"MovieSwiper\");","map":{"version":3,"names":["React","useRef","Swiper","SwiperSlide","Autoplay","EffectCoverflow","jsxDEV","_jsxDEV","MovieSwiper","slides","slideChange","_s","swiperRef","isDraggingRef","startPosRef","x","y","handleTouchStart","e","current","touch","touches","clientX","clientY","time","Date","now","handleTouchMove","diffX","Math","abs","diffY","handleSlideClick","slideId","timeDiff","isQuickTap","preventDefault","stopPropagation","effect","grabCursor","centeredSlides","slidesPerView","loop","autoplay","delay","disableOnInteraction","pauseOnMouseEnter","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","modules","className","allowTouchMove","simulateTouch","slideToClickedSlide","watchSlidesProgress","passiveListeners","onSwiper","swiper","children","map","slide","onClick","_id","onTouchStart","onTouchMove","onMouseDown","onMouseMove","src","previewImg","alt","draggable","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sonic/OneDrive/Documents/FInal Version(Hopefully) for stella site/stellabelessimovies/src/components/MovieSwiper.jsx"],"sourcesContent":["// MovieSwiper.js\r\nimport React, { useRef } from 'react';\r\nimport './movieSwiper.css';\r\nimport 'swiper/css';\r\nimport 'swiper/css/effect-coverflow';\r\nimport 'swiper/css/pagination';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Autoplay, EffectCoverflow } from 'swiper/modules';\r\n\r\nfunction MovieSwiper({ slides, slideChange }) {\r\n  const swiperRef = useRef(null);\r\n  const isDraggingRef = useRef(false);\r\n  const startPosRef = useRef({ x: 0, y: 0 });\r\n\r\n  const handleTouchStart = (e) => {\r\n    isDraggingRef.current = false;\r\n    const touch = e.touches ? e.touches[0] : e;\r\n    startPosRef.current = {\r\n      x: touch.clientX,\r\n      y: touch.clientY,\r\n      time: Date.now()\r\n    };\r\n  };\r\n\r\n  const handleTouchMove = (e) => {\r\n    if (!startPosRef.current.x) return;\r\n    \r\n    const touch = e.touches ? e.touches[0] : e;\r\n    const diffX = Math.abs(touch.clientX - startPosRef.current.x);\r\n    const diffY = Math.abs(touch.clientY - startPosRef.current.y);\r\n    \r\n    // If moved more than 5px, consider it a drag\r\n    if (diffX > 5 || diffY > 5) {\r\n      isDraggingRef.current = true;\r\n    }\r\n  };\r\n\r\n  const handleSlideClick = (slideId, e) => {\r\n    // Check if this was a quick tap (less than 300ms) with minimal movement\r\n    const timeDiff = Date.now() - (startPosRef.current.time || 0);\r\n    const isQuickTap = timeDiff < 300;\r\n    \r\n    // Prevent click if user was dragging (but allow quick taps)\r\n    if (isDraggingRef.current && !isQuickTap) {\r\n      return;\r\n    }\r\n    \r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    slideChange(slideId);\r\n  };\r\n\r\n  return (\r\n    <Swiper\r\n      effect=\"coverflow\"\r\n      grabCursor={true}\r\n      centeredSlides={true}\r\n      slidesPerView={'auto'}\r\n      loop={true}\r\n      autoplay={{\r\n        delay: 2500,\r\n        disableOnInteraction: false,\r\n        pauseOnMouseEnter: true,\r\n      }}\r\n      coverflowEffect={{\r\n        rotate: 40,\r\n        stretch: 0,\r\n        depth: 120,\r\n        modifier: 1,\r\n        slideShadows: true,\r\n      }}\r\n      modules={[Autoplay, EffectCoverflow]}\r\n      className=\"movieSwiper\"\r\n      allowTouchMove={true}\r\n      simulateTouch={true}\r\n      slideToClickedSlide={false}  // Disabled to prevent interference\r\n      watchSlidesProgress={true}\r\n      passiveListeners={false}     // Changed to false for better click handling\r\n      onSwiper={(swiper) => {\r\n        swiperRef.current = swiper;\r\n      }}\r\n    >\r\n      {slides.map((slide) => (\r\n        <SwiperSlide key={slide._id}>\r\n          <div\r\n            className=\"slide-content\"\r\n            onClick={(e) => handleSlideClick(slide._id, e)}\r\n            onTouchStart={handleTouchStart}\r\n            onTouchMove={handleTouchMove}\r\n            onMouseDown={handleTouchStart}\r\n            onMouseMove={handleTouchMove}\r\n          >\r\n            <img\r\n              src={slide.previewImg}\r\n              alt=\"Preview\"\r\n              draggable={false}\r\n            />\r\n          </div>\r\n        </SwiperSlide>\r\n      ))}\r\n    </Swiper>\r\n  );\r\n}\r\n\r\nexport default MovieSwiper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}