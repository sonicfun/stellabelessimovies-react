{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonic\\\\OneDrive\\\\Documents\\\\FInal Version(Hopefully) for stella site\\\\stellabelessimovies\\\\src\\\\components\\\\MovieSwiper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './movieSwiper.css';\n\n// Import Swiper styles\nimport 'swiper/css';\nimport 'swiper/css/effect-coverflow';\nimport 'swiper/css/pagination';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Autoplay, EffectCoverflow } from 'swiper/modules';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSwiper({\n  slides,\n  slideChange\n}) {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const [slidesPerView, setSlidesPerView] = useState('auto');\n\n  // Trigger animation on mount\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsVisible(true);\n    }, 100);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Responsive slides per view\n  useEffect(() => {\n    const handleResize = () => {\n      const width = window.innerWidth;\n      if (width < 480) {\n        setSlidesPerView(2.5);\n      } else if (width < 768) {\n        setSlidesPerView(3.5);\n      } else if (width < 1024) {\n        setSlidesPerView(4.5);\n      } else {\n        setSlidesPerView('auto');\n      }\n    };\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Enhanced coverflow settings based on screen size\n  const getCoverflowEffect = () => {\n    const width = window.innerWidth;\n    if (width < 768) {\n      return {\n        rotate: 30,\n        stretch: 0,\n        depth: 60,\n        modifier: 1,\n        slideShadows: true\n      };\n    } else {\n      return {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: true\n      };\n    }\n  };\n\n  // Enhanced autoplay settings\n  const getAutoplaySettings = () => {\n    const width = window.innerWidth;\n    return {\n      delay: width < 768 ? 3000 : 2500,\n      // Slower on mobile\n      disableOnInteraction: false,\n      pauseOnMouseEnter: true // Pause on hover for better UX\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `swiper-container ${isVisible ? 'visible' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(Swiper, {\n      effect: 'coverflow',\n      grabCursor: true,\n      centeredSlides: true,\n      slidesPerView: slidesPerView,\n      autoplay: getAutoplaySettings(),\n      coverflowEffect: getCoverflowEffect(),\n      loop: true,\n      modules: [Autoplay, EffectCoverflow],\n      className: \"movieSwiper\",\n      spaceBetween: 10 // Add space between slides\n      ,\n      speed: 800 // Smooth transitions\n      ,\n      breakpoints: {\n        // Enhanced breakpoint settings\n        320: {\n          slidesPerView: 2.2,\n          spaceBetween: 8\n        },\n        480: {\n          slidesPerView: 2.8,\n          spaceBetween: 10\n        },\n        768: {\n          slidesPerView: 3.5,\n          spaceBetween: 12\n        },\n        1024: {\n          slidesPerView: 4.2,\n          spaceBetween: 15\n        },\n        1440: {\n          slidesPerView: 'auto',\n          spaceBetween: 20\n        }\n      },\n      onSlideChange: swiper => {\n        // Optional: Add slide change effects\n        console.log('Slide changed to:', swiper.activeIndex);\n      },\n      children: slides.map((slide, index) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        style: {\n          // Stagger animation delay\n          animationDelay: `${index % 8 * 0.1 + 0.1}s`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: slide.previewImg,\n          alt: slide.title || \"Movie Preview\",\n          onClick: () => slideChange(slide._id),\n          loading: \"lazy\" // Optimize image loading\n          ,\n          onError: e => {\n            // Fallback for broken images\n            e.target.style.backgroundColor = '#1a1a1a';\n            e.target.style.display = 'flex';\n            e.target.style.alignItems = 'center';\n            e.target.style.justifyContent = 'center';\n            e.target.innerHTML = '<span style=\"color: #666; font-size: 12px;\">Image not found</span>';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)\n      }, slide._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(MovieSwiper, \"kxhV4MWAeofcSbU++Dm7KeiqNws=\");\n_c = MovieSwiper;\nexport default MovieSwiper;\nvar _c;\n$RefreshReg$(_c, \"MovieSwiper\");","map":{"version":3,"names":["React","useEffect","useState","Swiper","SwiperSlide","Autoplay","EffectCoverflow","jsxDEV","_jsxDEV","MovieSwiper","slides","slideChange","_s","isVisible","setIsVisible","slidesPerView","setSlidesPerView","timer","setTimeout","clearTimeout","handleResize","width","window","innerWidth","addEventListener","removeEventListener","getCoverflowEffect","rotate","stretch","depth","modifier","slideShadows","getAutoplaySettings","delay","disableOnInteraction","pauseOnMouseEnter","className","children","effect","grabCursor","centeredSlides","autoplay","coverflowEffect","loop","modules","spaceBetween","speed","breakpoints","onSlideChange","swiper","console","log","activeIndex","map","slide","index","style","animationDelay","src","previewImg","alt","title","onClick","_id","loading","onError","e","target","backgroundColor","display","alignItems","justifyContent","innerHTML","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sonic/OneDrive/Documents/FInal Version(Hopefully) for stella site/stellabelessimovies/src/components/MovieSwiper.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './movieSwiper.css';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/css';\r\nimport 'swiper/css/effect-coverflow';\r\nimport 'swiper/css/pagination';\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Autoplay, EffectCoverflow } from 'swiper/modules';\r\n\r\nfunction MovieSwiper({ slides, slideChange }) {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const [slidesPerView, setSlidesPerView] = useState('auto');\r\n\r\n    // Trigger animation on mount\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setIsVisible(true);\r\n        }, 100);\r\n        return () => clearTimeout(timer);\r\n    }, []);\r\n\r\n    // Responsive slides per view\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            const width = window.innerWidth;\r\n            if (width < 480) {\r\n                setSlidesPerView(2.5);\r\n            } else if (width < 768) {\r\n                setSlidesPerView(3.5);\r\n            } else if (width < 1024) {\r\n                setSlidesPerView(4.5);\r\n            } else {\r\n                setSlidesPerView('auto');\r\n            }\r\n        };\r\n\r\n        handleResize();\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    // Enhanced coverflow settings based on screen size\r\n    const getCoverflowEffect = () => {\r\n        const width = window.innerWidth;\r\n        if (width < 768) {\r\n            return {\r\n                rotate: 30,\r\n                stretch: 0,\r\n                depth: 60,\r\n                modifier: 1,\r\n                slideShadows: true,\r\n            };\r\n        } else {\r\n            return {\r\n                rotate: 50,\r\n                stretch: 0,\r\n                depth: 100,\r\n                modifier: 1,\r\n                slideShadows: true,\r\n            };\r\n        }\r\n    };\r\n\r\n    // Enhanced autoplay settings\r\n    const getAutoplaySettings = () => {\r\n        const width = window.innerWidth;\r\n        return {\r\n            delay: width < 768 ? 3000 : 2500, // Slower on mobile\r\n            disableOnInteraction: false,\r\n            pauseOnMouseEnter: true, // Pause on hover for better UX\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className={`swiper-container ${isVisible ? 'visible' : ''}`}>\r\n            <Swiper\r\n                effect={'coverflow'}\r\n                grabCursor={true}\r\n                centeredSlides={true}\r\n                slidesPerView={slidesPerView}\r\n                autoplay={getAutoplaySettings()}\r\n                coverflowEffect={getCoverflowEffect()}\r\n                loop={true}\r\n                modules={[Autoplay, EffectCoverflow]}\r\n                className=\"movieSwiper\"\r\n                spaceBetween={10} // Add space between slides\r\n                speed={800} // Smooth transitions\r\n                breakpoints={{\r\n                    // Enhanced breakpoint settings\r\n                    320: {\r\n                        slidesPerView: 2.2,\r\n                        spaceBetween: 8,\r\n                    },\r\n                    480: {\r\n                        slidesPerView: 2.8,\r\n                        spaceBetween: 10,\r\n                    },\r\n                    768: {\r\n                        slidesPerView: 3.5,\r\n                        spaceBetween: 12,\r\n                    },\r\n                    1024: {\r\n                        slidesPerView: 4.2,\r\n                        spaceBetween: 15,\r\n                    },\r\n                    1440: {\r\n                        slidesPerView: 'auto',\r\n                        spaceBetween: 20,\r\n                    },\r\n                }}\r\n                onSlideChange={(swiper) => {\r\n                    // Optional: Add slide change effects\r\n                    console.log('Slide changed to:', swiper.activeIndex);\r\n                }}\r\n            >\r\n                {slides.map((slide, index) => (\r\n                    <SwiperSlide \r\n                        key={slide._id}\r\n                        style={{\r\n                            // Stagger animation delay\r\n                            animationDelay: `${(index % 8) * 0.1 + 0.1}s`\r\n                        }}\r\n                    >\r\n                        <img \r\n                            src={slide.previewImg} \r\n                            alt={slide.title || \"Movie Preview\"}\r\n                            onClick={() => slideChange(slide._id)}\r\n                            loading=\"lazy\" // Optimize image loading\r\n                            onError={(e) => {\r\n                                // Fallback for broken images\r\n                                e.target.style.backgroundColor = '#1a1a1a';\r\n                                e.target.style.display = 'flex';\r\n                                e.target.style.alignItems = 'center';\r\n                                e.target.style.justifyContent = 'center';\r\n                                e.target.innerHTML = '<span style=\"color: #666; font-size: 12px;\">Image not found</span>';\r\n                            }}\r\n                        />\r\n                    </SwiperSlide>\r\n                ))}\r\n            </Swiper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieSwiper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}