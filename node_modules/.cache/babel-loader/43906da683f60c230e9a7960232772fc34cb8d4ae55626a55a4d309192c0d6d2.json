{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonic\\\\OneDrive\\\\Documents\\\\FInal Version(Hopefully) for stella site\\\\stellabelessimovies\\\\src\\\\components\\\\Modal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Modal({\n  movie,\n  status,\n  toggleModal\n}) {\n  _s();\n  const [videoSrc, setVideoSrc] = useState(\"\");\n  const [startTime, setStartTime] = useState(null);\n\n  // Create storage key for this movie\n  const storageKey = `movie_${movie.id || movie.title.replace(/[^a-zA-Z0-9]/g, '_')}`;\n  useEffect(() => {\n    if (status) {\n      // Get saved watch time\n      const savedTime = parseInt(localStorage.getItem(storageKey) || '0');\n      setStartTime(Date.now());\n\n      // Build video URL with resume time\n      let videoUrl = movie.video;\n      if (savedTime > 0) {\n        // For YouTube\n        if (videoUrl.includes('youtube.com') || videoUrl.includes('youtu.be')) {\n          const timeParam = `&t=${savedTime}s`;\n          const autoplayParam = videoUrl.includes(\"?\") ? \"&autoplay=1\" : \"?autoplay=1\";\n          videoUrl = `${movie.video}${autoplayParam}${timeParam}`;\n        }\n        // For Vimeo  \n        else if (videoUrl.includes('vimeo.com')) {\n          const timeParam = `#t=${savedTime}s`;\n          const autoplayParam = videoUrl.includes(\"?\") ? \"&autoplay=1\" : \"?autoplay=1\";\n          videoUrl = `${movie.video}${autoplayParam}${timeParam}`;\n        }\n        // For other videos\n        else {\n          const separator = videoUrl.includes(\"?\") ? \"&\" : \"?\";\n          videoUrl = `${movie.video}${separator}autoplay=1&t=${savedTime}`;\n        }\n      } else {\n        // First time watching - just add autoplay\n        const autoplayParam = videoUrl.includes(\"?\") ? \"&autoplay=1\" : \"?autoplay=1\";\n        videoUrl = `${movie.video}${autoplayParam}`;\n      }\n      setVideoSrc(videoUrl);\n    } else {\n      // Modal is closing - save the watch time\n      if (startTime) {\n        const watchedSeconds = Math.floor((Date.now() - startTime) / 1000);\n        const previousTime = parseInt(localStorage.getItem(storageKey) || '0');\n        const newTotalTime = previousTime + watchedSeconds;\n\n        // Only save if they watched for more than 10 seconds\n        if (watchedSeconds > 10) {\n          localStorage.setItem(storageKey, newTotalTime.toString());\n        }\n      }\n      setVideoSrc(\"\");\n      setStartTime(null);\n    }\n  }, [status, movie.video, storageKey, startTime]);\n  const handleClose = () => {\n    // Save time before closing\n    if (startTime) {\n      const watchedSeconds = Math.floor((Date.now() - startTime) / 1000);\n      const previousTime = parseInt(localStorage.getItem(storageKey) || '0');\n      const newTotalTime = previousTime + watchedSeconds;\n      if (watchedSeconds > 10) {\n        localStorage.setItem(storageKey, newTotalTime.toString());\n      }\n    }\n    toggleModal();\n  };\n  const restartMovie = () => {\n    // Clear saved progress\n    localStorage.removeItem(storageKey);\n\n    // Reload video from beginning\n    const autoplayParam = movie.video.includes(\"?\") ? \"&autoplay=1\" : \"?autoplay=1\";\n    setVideoSrc(`${movie.video}${autoplayParam}`);\n    setStartTime(Date.now());\n  };\n\n  // Check if there's saved progress\n  const savedTime = parseInt(localStorage.getItem(storageKey) || '0');\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `movieModal ${status ? 'active' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      className: \"modalClose\",\n      onClick: handleClose,\n      children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n        name: \"close-outline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), status && savedTime > 30 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resumeIndicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Resume from \", formatTime(savedTime), \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartMovie,\n        className: \"restartBtn\",\n        children: \"Start Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), status && /*#__PURE__*/_jsxDEV(\"iframe\", {\n      width: \"1280\",\n      height: \"720\",\n      src: videoSrc,\n      title: `${movie.title} | Official Movie`,\n      frameBorder: \"0\",\n      allow: \"autoplay; accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(Modal, \"usvQeP6oDqykFlBU6zjewrXDz0c=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Modal","movie","status","toggleModal","_s","videoSrc","setVideoSrc","startTime","setStartTime","storageKey","id","title","replace","savedTime","parseInt","localStorage","getItem","Date","now","videoUrl","video","includes","timeParam","autoplayParam","separator","watchedSeconds","Math","floor","previousTime","newTotalTime","setItem","toString","handleClose","restartMovie","removeItem","formatTime","seconds","mins","secs","padStart","className","children","href","onClick","name","fileName","_jsxFileName","lineNumber","columnNumber","width","height","src","frameBorder","allow","allowFullScreen","_c","$RefreshReg$"],"sources":["C:/Users/sonic/OneDrive/Documents/FInal Version(Hopefully) for stella site/stellabelessimovies/src/components/Modal.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './modal.css';\r\n\r\nfunction Modal({ movie, status, toggleModal }) {\r\n  const [videoSrc, setVideoSrc] = useState(\"\");\r\n  const [startTime, setStartTime] = useState(null);\r\n  \r\n  // Create storage key for this movie\r\n  const storageKey = `movie_${movie.id || movie.title.replace(/[^a-zA-Z0-9]/g, '_')}`;\r\n\r\n  useEffect(() => {\r\n    if (status) {\r\n      // Get saved watch time\r\n      const savedTime = parseInt(localStorage.getItem(storageKey) || '0');\r\n      setStartTime(Date.now());\r\n\r\n      // Build video URL with resume time\r\n      let videoUrl = movie.video;\r\n      \r\n      if (savedTime > 0) {\r\n        // For YouTube\r\n        if (videoUrl.includes('youtube.com') || videoUrl.includes('youtu.be')) {\r\n          const timeParam = `&t=${savedTime}s`;\r\n          const autoplayParam = videoUrl.includes(\"?\") ? \"&autoplay=1\" : \"?autoplay=1\";\r\n          videoUrl = `${movie.video}${autoplayParam}${timeParam}`;\r\n        }\r\n        // For Vimeo  \r\n        else if (videoUrl.includes('vimeo.com')) {\r\n          const timeParam = `#t=${savedTime}s`;\r\n          const autoplayParam = videoUrl.includes(\"?\") ? \"&autoplay=1\" : \"?autoplay=1\";\r\n          videoUrl = `${movie.video}${autoplayParam}${timeParam}`;\r\n        }\r\n        // For other videos\r\n        else {\r\n          const separator = videoUrl.includes(\"?\") ? \"&\" : \"?\";\r\n          videoUrl = `${movie.video}${separator}autoplay=1&t=${savedTime}`;\r\n        }\r\n      } else {\r\n        // First time watching - just add autoplay\r\n        const autoplayParam = videoUrl.includes(\"?\") ? \"&autoplay=1\" : \"?autoplay=1\";\r\n        videoUrl = `${movie.video}${autoplayParam}`;\r\n      }\r\n\r\n      setVideoSrc(videoUrl);\r\n\r\n    } else {\r\n      // Modal is closing - save the watch time\r\n      if (startTime) {\r\n        const watchedSeconds = Math.floor((Date.now() - startTime) / 1000);\r\n        const previousTime = parseInt(localStorage.getItem(storageKey) || '0');\r\n        const newTotalTime = previousTime + watchedSeconds;\r\n        \r\n        // Only save if they watched for more than 10 seconds\r\n        if (watchedSeconds > 10) {\r\n          localStorage.setItem(storageKey, newTotalTime.toString());\r\n        }\r\n      }\r\n      \r\n      setVideoSrc(\"\");\r\n      setStartTime(null);\r\n    }\r\n  }, [status, movie.video, storageKey, startTime]);\r\n\r\n  const handleClose = () => {\r\n    // Save time before closing\r\n    if (startTime) {\r\n      const watchedSeconds = Math.floor((Date.now() - startTime) / 1000);\r\n      const previousTime = parseInt(localStorage.getItem(storageKey) || '0');\r\n      const newTotalTime = previousTime + watchedSeconds;\r\n      \r\n      if (watchedSeconds > 10) {\r\n        localStorage.setItem(storageKey, newTotalTime.toString());\r\n      }\r\n    }\r\n    \r\n    toggleModal();\r\n  };\r\n\r\n  const restartMovie = () => {\r\n    // Clear saved progress\r\n    localStorage.removeItem(storageKey);\r\n    \r\n    // Reload video from beginning\r\n    const autoplayParam = movie.video.includes(\"?\") ? \"&autoplay=1\" : \"?autoplay=1\";\r\n    setVideoSrc(`${movie.video}${autoplayParam}`);\r\n    setStartTime(Date.now());\r\n  };\r\n\r\n  // Check if there's saved progress\r\n  const savedTime = parseInt(localStorage.getItem(storageKey) || '0');\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  return (\r\n    <div className={`movieModal ${status ? 'active' : ''}`}>\r\n      <a href=\"#\" className=\"modalClose\" onClick={handleClose}>\r\n        <ion-icon name=\"close-outline\"></ion-icon>\r\n      </a>\r\n      \r\n      {/* Show resume option if there's saved progress */}\r\n      {status && savedTime > 30 && (\r\n        <div className=\"resumeIndicator\">\r\n          <p>Resume from {formatTime(savedTime)}?</p>\r\n          <button onClick={restartMovie} className=\"restartBtn\">\r\n            Start Over\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {status && (\r\n        <iframe\r\n          width=\"1280\"\r\n          height=\"720\"\r\n          src={videoSrc}\r\n          title={`${movie.title} | Official Movie`}\r\n          frameBorder=\"0\"\r\n          allow=\"autoplay; accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n          allowFullScreen\r\n        ></iframe>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}