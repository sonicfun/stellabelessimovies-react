{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonic\\\\OneDrive\\\\Documents\\\\FInal Version(Hopefully) for stella site\\\\stellabelessimovies\\\\src\\\\components\\\\PlayBtn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MovieSwiper from './MovieSwiper';\nimport PlayBtn from './PlayBtn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction YourParentComponent({\n  movies\n}) {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handlePlayChange = modalState => {\n    setIsModalOpen(modalState);\n  };\n  const handleSlideChange = movieId => {\n    // Your existing slide change logic\n    console.log('Active movie:', movieId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"banner\",\n    children: [movies.map(movie => /*#__PURE__*/_jsxDEV(PlayBtn, {\n      movie: movie,\n      onPlayChange: handlePlayChange\n    }, movie._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(MovieSwiper, {\n      slides: movies,\n      slideChange: handleSlideChange,\n      isModalOpen: isModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(YourParentComponent, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n_c = YourParentComponent;\nexport default YourParentComponent;\nvar _c;\n$RefreshReg$(_c, \"YourParentComponent\");","map":{"version":3,"names":["React","useState","MovieSwiper","PlayBtn","jsxDEV","_jsxDEV","YourParentComponent","movies","_s","isModalOpen","setIsModalOpen","handlePlayChange","modalState","handleSlideChange","movieId","console","log","className","children","map","movie","onPlayChange","_id","fileName","_jsxFileName","lineNumber","columnNumber","slides","slideChange","_c","$RefreshReg$"],"sources":["C:/Users/sonic/OneDrive/Documents/FInal Version(Hopefully) for stella site/stellabelessimovies/src/components/PlayBtn.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport MovieSwiper from './MovieSwiper';\r\nimport PlayBtn from './PlayBtn';\r\n\r\nfunction YourParentComponent({ movies }) {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handlePlayChange = (modalState) => {\r\n    setIsModalOpen(modalState);\r\n  };\r\n\r\n  const handleSlideChange = (movieId) => {\r\n    // Your existing slide change logic\r\n    console.log('Active movie:', movieId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"banner\">\r\n      {/* Your other content */}\r\n      \r\n      {movies.map((movie) => (\r\n        <PlayBtn\r\n          key={movie._id}\r\n          movie={movie}\r\n          onPlayChange={handlePlayChange}\r\n        />\r\n      ))}\r\n\r\n      <MovieSwiper\r\n        slides={movies}\r\n        slideChange={handleSlideChange}\r\n        isModalOpen={isModalOpen}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default YourParentComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,mBAAmBA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMU,gBAAgB,GAAIC,UAAU,IAAK;IACvCF,cAAc,CAACE,UAAU,CAAC;EAC5B,CAAC;EAED,MAAMC,iBAAiB,GAAIC,OAAO,IAAK;IACrC;IACAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,OAAO,CAAC;EACvC,CAAC;EAED,oBACET,OAAA;IAAKY,SAAS,EAAC,QAAQ;IAAAC,QAAA,GAGpBX,MAAM,CAACY,GAAG,CAAEC,KAAK,iBAChBf,OAAA,CAACF,OAAO;MAENiB,KAAK,EAAEA,KAAM;MACbC,YAAY,EAAEV;IAAiB,GAF1BS,KAAK,CAACE,GAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGf,CACF,CAAC,eAEFrB,OAAA,CAACH,WAAW;MACVyB,MAAM,EAAEpB,MAAO;MACfqB,WAAW,EAAEf,iBAAkB;MAC/BJ,WAAW,EAAEA;IAAY;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClB,EAAA,CA/BQF,mBAAmB;AAAAuB,EAAA,GAAnBvB,mBAAmB;AAiC5B,eAAeA,mBAAmB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}