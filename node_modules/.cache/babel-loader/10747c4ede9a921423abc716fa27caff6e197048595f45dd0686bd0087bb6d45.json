{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonic\\\\OneDrive\\\\Documents\\\\FInal Version(Hopefully) for stella site\\\\stellabelessimovies\\\\src\\\\components\\\\MovieSwiper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSwiper({\n  slides,\n  slideChange\n}) {\n  _s();\n  const [tapPosition, setTapPosition] = useState(null);\n  const touchStartRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const handleTouchStart = e => {\n    const touch = e.touches[0];\n    touchStartRef.current = {\n      x: touch.clientX,\n      y: touch.clientY\n    };\n  };\n  const handleTouchEnd = (slideId, e) => {\n    const touch = e.changedTouches[0];\n    const dx = Math.abs(touch.clientX - touchStartRef.current.x);\n    const dy = Math.abs(touch.clientY - touchStartRef.current.y);\n\n    // Ignore if it was a swipe\n    if (dx > 10 || dy > 10) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = touch.clientX - rect.left;\n    const y = touch.clientY - rect.top;\n    setTapPosition({\n      x,\n      y\n    });\n    slideChange(slideId);\n    setTimeout(() => setTapPosition(null), 500);\n  };\n  return /*#__PURE__*/_jsxDEV(Swiper /* ... all your props */, {\n    children: slides.map(slide => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide-content\",\n        onClick: e => {\n          const rect = e.currentTarget.getBoundingClientRect();\n          setTapPosition({\n            x: e.clientX - rect.left,\n            y: e.clientY - rect.top\n          });\n          slideChange(slide._id);\n          setTimeout(() => setTapPosition(null), 500);\n        },\n        onTouchStart: handleTouchStart,\n        onTouchEnd: e => handleTouchEnd(slide._id, e),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: slide.previewImg,\n          alt: \"Preview\",\n          draggable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), tapPosition && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tap-indicator\",\n          style: {\n            left: tapPosition.x,\n            top: tapPosition.y\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, slide._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieSwiper, \"gB2z/u3vYrl83fH7SqMI7YWVZ38=\");\n_c = MovieSwiper;\nvar _c;\n$RefreshReg$(_c, \"MovieSwiper\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","MovieSwiper","slides","slideChange","_s","tapPosition","setTapPosition","touchStartRef","x","y","handleTouchStart","e","touch","touches","current","clientX","clientY","handleTouchEnd","slideId","changedTouches","dx","Math","abs","dy","rect","currentTarget","getBoundingClientRect","left","top","setTimeout","Swiper","children","map","slide","SwiperSlide","className","onClick","_id","onTouchStart","onTouchEnd","src","previewImg","alt","draggable","fileName","_jsxFileName","lineNumber","columnNumber","style","_c","$RefreshReg$"],"sources":["C:/Users/sonic/OneDrive/Documents/FInal Version(Hopefully) for stella site/stellabelessimovies/src/components/MovieSwiper.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\n\r\nfunction MovieSwiper({ slides, slideChange }) {\r\n  const [tapPosition, setTapPosition] = useState(null);\r\n  const touchStartRef = useRef({ x: 0, y: 0 });\r\n\r\n  const handleTouchStart = (e) => {\r\n    const touch = e.touches[0];\r\n    touchStartRef.current = { x: touch.clientX, y: touch.clientY };\r\n  };\r\n\r\n  const handleTouchEnd = (slideId, e) => {\r\n    const touch = e.changedTouches[0];\r\n    const dx = Math.abs(touch.clientX - touchStartRef.current.x);\r\n    const dy = Math.abs(touch.clientY - touchStartRef.current.y);\r\n\r\n    // Ignore if it was a swipe\r\n    if (dx > 10 || dy > 10) return;\r\n\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const x = touch.clientX - rect.left;\r\n    const y = touch.clientY - rect.top;\r\n\r\n    setTapPosition({ x, y });\r\n    slideChange(slideId);\r\n\r\n    setTimeout(() => setTapPosition(null), 500);\r\n  };\r\n\r\n  return (\r\n    <Swiper /* ... all your props */>\r\n      {slides.map(slide => (\r\n        <SwiperSlide key={slide._id}>\r\n          <div\r\n            className=\"slide-content\"\r\n            onClick={(e) => {\r\n              const rect = e.currentTarget.getBoundingClientRect();\r\n              setTapPosition({ x: e.clientX - rect.left, y: e.clientY - rect.top });\r\n              slideChange(slide._id);\r\n              setTimeout(() => setTapPosition(null), 500);\r\n            }}\r\n            onTouchStart={handleTouchStart}\r\n            onTouchEnd={(e) => handleTouchEnd(slide._id, e)}\r\n          >\r\n            <img src={slide.previewImg} alt=\"Preview\" draggable={false} />\r\n            {tapPosition && (\r\n              <div\r\n                className=\"tap-indicator\"\r\n                style={{ left: tapPosition.x, top: tapPosition.y }}\r\n              />\r\n            )}\r\n          </div>\r\n        </SwiperSlide>\r\n      ))}\r\n    </Swiper>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}