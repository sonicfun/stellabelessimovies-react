{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonic\\\\OneDrive\\\\Documents\\\\FInal Version(Hopefully) for stella site\\\\stellabelessimovies\\\\src\\\\components\\\\MovieSwiper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './movieSwiper.css';\nimport 'swiper/css';\nimport 'swiper/css/effect-coverflow';\nimport 'swiper/css/free-mode';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Autoplay, EffectCoverflow, FreeMode } from 'swiper/modules';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSwiper({\n  slides,\n  slideChange\n}) {\n  _s();\n  // Keep tap position per slide\n  const [tapPositions, setTapPositions] = useState({});\n  const handleClick = (slideId, e) => {\n    slideChange(slideId);\n    const rect = e.currentTarget.getBoundingClientRect();\n    let x, y;\n    if (e.type.startsWith(\"touch\")) {\n      const touch = e.touches[0];\n      x = touch.clientX - rect.left;\n      y = touch.clientY - rect.top;\n    } else {\n      x = e.clientX - rect.left;\n      y = e.clientY - rect.top;\n    }\n    setTapPositions(prev => ({\n      ...prev,\n      [slideId]: {\n        x,\n        y\n      }\n    }));\n    setTimeout(() => {\n      setTapPositions(prev => {\n        const newState = {\n          ...prev\n        };\n        delete newState[slideId];\n        return newState;\n      });\n    }, 500);\n  };\n  return /*#__PURE__*/_jsxDEV(Swiper, {\n    className: \"movieSwiper\",\n    modules: [Autoplay, EffectCoverflow, FreeMode],\n    effect: \"coverflow\",\n    grabCursor: true,\n    centeredSlides: true,\n    slidesPerView: \"auto\",\n    coverflowEffect: {\n      rotate: 0,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: false\n    },\n    freeMode: true,\n    autoplay: {\n      delay: 3000\n    },\n    children: slides.map(slide => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: slide.image,\n          alt: slide.title,\n          onClick: e => handleClick(slide._id, e),\n          onTouchStart: e => handleClick(slide._id, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), tapPositions[slide._id] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tap-indicator\",\n          style: {\n            left: tapPositions[slide._id].x,\n            top: tapPositions[slide._id].y\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, slide._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieSwiper, \"g3MRzho4c4CyL+IhQmgXJb9Tm4Q=\");\n_c = MovieSwiper;\nexport default MovieSwiper;\nvar _c;\n$RefreshReg$(_c, \"MovieSwiper\");","map":{"version":3,"names":["React","useState","Swiper","SwiperSlide","Autoplay","EffectCoverflow","FreeMode","jsxDEV","_jsxDEV","MovieSwiper","slides","slideChange","_s","tapPositions","setTapPositions","handleClick","slideId","e","rect","currentTarget","getBoundingClientRect","x","y","type","startsWith","touch","touches","clientX","left","clientY","top","prev","setTimeout","newState","className","modules","effect","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","freeMode","autoplay","delay","children","map","slide","src","image","alt","title","onClick","_id","onTouchStart","fileName","_jsxFileName","lineNumber","columnNumber","style","_c","$RefreshReg$"],"sources":["C:/Users/sonic/OneDrive/Documents/FInal Version(Hopefully) for stella site/stellabelessimovies/src/components/MovieSwiper.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './movieSwiper.css';\r\nimport 'swiper/css';\r\nimport 'swiper/css/effect-coverflow';\r\nimport 'swiper/css/free-mode';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Autoplay, EffectCoverflow, FreeMode } from 'swiper/modules';\r\n\r\nfunction MovieSwiper({ slides, slideChange }) {\r\n  // Keep tap position per slide\r\n  const [tapPositions, setTapPositions] = useState({});\r\n\r\n  const handleClick = (slideId, e) => {\r\n    slideChange(slideId);\r\n\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    let x, y;\r\n\r\n    if (e.type.startsWith(\"touch\")) {\r\n      const touch = e.touches[0];\r\n      x = touch.clientX - rect.left;\r\n      y = touch.clientY - rect.top;\r\n    } else {\r\n      x = e.clientX - rect.left;\r\n      y = e.clientY - rect.top;\r\n    }\r\n\r\n    setTapPositions(prev => ({ ...prev, [slideId]: { x, y } }));\r\n\r\n    setTimeout(() => {\r\n      setTapPositions(prev => {\r\n        const newState = { ...prev };\r\n        delete newState[slideId];\r\n        return newState;\r\n      });\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <Swiper\r\n      className=\"movieSwiper\"\r\n      modules={[Autoplay, EffectCoverflow, FreeMode]}\r\n      effect=\"coverflow\"\r\n      grabCursor\r\n      centeredSlides\r\n      slidesPerView=\"auto\"\r\n      coverflowEffect={{\r\n        rotate: 0,\r\n        stretch: 0,\r\n        depth: 100,\r\n        modifier: 1,\r\n        slideShadows: false,\r\n      }}\r\n      freeMode\r\n      autoplay={{ delay: 3000 }}\r\n    >\r\n      {slides.map(slide => (\r\n        <SwiperSlide key={slide._id}>\r\n          <div className=\"slide-content\">\r\n            <img\r\n              src={slide.image}\r\n              alt={slide.title}\r\n              onClick={(e) => handleClick(slide._id, e)}\r\n              onTouchStart={(e) => handleClick(slide._id, e)}\r\n            />\r\n            {tapPositions[slide._id] && (\r\n              <div\r\n                className=\"tap-indicator\"\r\n                style={{\r\n                  left: tapPositions[slide._id].x,\r\n                  top: tapPositions[slide._id].y\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        </SwiperSlide>\r\n      ))}\r\n    </Swiper>\r\n  );\r\n}\r\n\r\nexport default MovieSwiper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}