{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonic\\\\OneDrive\\\\Documents\\\\FInal Version(Hopefully) for stella site\\\\stellabelessimovies\\\\src\\\\components\\\\Modal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Modal({\n  movie,\n  status,\n  toggleModal\n}) {\n  _s();\n  const [videoSrc, setVideoSrc] = useState(\"\");\n  const [watchTime, setWatchTime] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n\n  // Generate unique storage key for each movie\n  const getStorageKey = () => `watch_progress_${movie.id || movie.title.replace(/\\s+/g, '_')}`;\n  useEffect(() => {\n    if (status) {\n      // Get saved watch time\n      const savedProgress = JSON.parse(localStorage.getItem(getStorageKey()) || '{}');\n      const totalWatchTime = savedProgress.totalTime || 0;\n      setWatchTime(totalWatchTime);\n      setStartTime(Date.now());\n\n      // Build video URL with time parameter if available\n      let videoUrl = movie.video;\n      if (totalWatchTime > 0) {\n        // For YouTube\n        if (videoUrl.includes('youtube.com') || videoUrl.includes('youtu.be')) {\n          const timeParam = `&t=${Math.floor(totalWatchTime)}s`;\n          const autoplayParam = videoUrl.includes(\"?\") ? \"&autoplay=1\" : \"?autoplay=1\";\n          videoUrl = `${movie.video}${autoplayParam}${timeParam}`;\n        }\n        // For Vimeo\n        else if (videoUrl.includes('vimeo.com')) {\n          const timeParam = `#t=${Math.floor(totalWatchTime)}s`;\n          const autoplayParam = videoUrl.includes(\"?\") ? \"&autoplay=1\" : \"?autoplay=1\";\n          videoUrl = `${movie.video}${autoplayParam}${timeParam}`;\n        }\n        // For direct video files\n        else {\n          const separator = videoUrl.includes(\"?\") ? \"&\" : \"?\";\n          videoUrl = `${movie.video}${separator}t=${Math.floor(totalWatchTime)}`;\n        }\n      } else {\n        // No saved time, just add autoplay\n        const autoplayParam = videoUrl.includes(\"?\") ? \"&autoplay=1\" : \"?autoplay=1\";\n        videoUrl = `${movie.video}${autoplayParam}`;\n      }\n      setVideoSrc(videoUrl);\n    } else {\n      // Modal closing - save watch time\n      if (startTime) {\n        const sessionWatchTime = Math.floor((Date.now() - startTime) / 1000);\n        const savedProgress = JSON.parse(localStorage.getItem(getStorageKey()) || '{}');\n        const newTotalTime = (savedProgress.totalTime || 0) + sessionWatchTime;\n        localStorage.setItem(getStorageKey(), JSON.stringify({\n          totalTime: newTotalTime,\n          lastWatched: new Date().toISOString(),\n          movieTitle: movie.title\n        }));\n      }\n      setVideoSrc(\"\");\n      setStartTime(null);\n    }\n  }, [status, movie.video]);\n  const handleModalClose = () => {\n    // Save session time before closing\n    if (startTime) {\n      const sessionWatchTime = Math.floor((Date.now() - startTime) / 1000);\n      const savedProgress = JSON.parse(localStorage.getItem(getStorageKey()) || '{}');\n      const newTotalTime = (savedProgress.totalTime || 0) + sessionWatchTime;\n      localStorage.setItem(getStorageKey(), JSON.stringify({\n        totalTime: newTotalTime,\n        lastWatched: new Date().toISOString(),\n        movieTitle: movie.title\n      }));\n    }\n    toggleModal();\n  };\n  const restartMovie = () => {\n    localStorage.removeItem(getStorageKey());\n    setWatchTime(0);\n\n    // Reload video from beginning\n    const autoplayParam = movie.video.includes(\"?\") ? \"&autoplay=1\" : \"?autoplay=1\";\n    setVideoSrc(`${movie.video}${autoplayParam}`);\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `movieModal ${status ? 'active' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      className: \"modalClose\",\n      onClick: handleModalClose,\n      children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n        name: \"close-outline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), status && watchTime > 30 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resumeIndicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Continue watching from \", formatTime(watchTime), \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartMovie,\n        className: \"restartBtn\",\n        children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n          name: \"refresh-outline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), \"Restart\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), status && /*#__PURE__*/_jsxDEV(\"iframe\", {\n      width: \"1280\",\n      height: \"720\",\n      src: videoSrc,\n      title: `${movie.title} | Official Movie`,\n      frameBorder: \"0\",\n      allow: \"autoplay; accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(Modal, \"165VLAYYlkzrQKlKQmdVXjHezKE=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Modal","movie","status","toggleModal","_s","videoSrc","setVideoSrc","watchTime","setWatchTime","startTime","setStartTime","getStorageKey","id","title","replace","savedProgress","JSON","parse","localStorage","getItem","totalWatchTime","totalTime","Date","now","videoUrl","video","includes","timeParam","Math","floor","autoplayParam","separator","sessionWatchTime","newTotalTime","setItem","stringify","lastWatched","toISOString","movieTitle","handleModalClose","restartMovie","removeItem","formatTime","seconds","mins","secs","toString","padStart","className","children","href","onClick","name","fileName","_jsxFileName","lineNumber","columnNumber","width","height","src","frameBorder","allow","allowFullScreen","_c","$RefreshReg$"],"sources":["C:/Users/sonic/OneDrive/Documents/FInal Version(Hopefully) for stella site/stellabelessimovies/src/components/Modal.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './modal.css';\r\n\r\nfunction Modal({ movie, status, toggleModal }) {\r\n  const [videoSrc, setVideoSrc] = useState(\"\");\r\n  const [watchTime, setWatchTime] = useState(0);\r\n  const [startTime, setStartTime] = useState(null);\r\n\r\n  // Generate unique storage key for each movie\r\n  const getStorageKey = () => `watch_progress_${movie.id || movie.title.replace(/\\s+/g, '_')}`;\r\n\r\n  useEffect(() => {\r\n    if (status) {\r\n      // Get saved watch time\r\n      const savedProgress = JSON.parse(localStorage.getItem(getStorageKey()) || '{}');\r\n      const totalWatchTime = savedProgress.totalTime || 0;\r\n      \r\n      setWatchTime(totalWatchTime);\r\n      setStartTime(Date.now());\r\n\r\n      // Build video URL with time parameter if available\r\n      let videoUrl = movie.video;\r\n      \r\n      if (totalWatchTime > 0) {\r\n        // For YouTube\r\n        if (videoUrl.includes('youtube.com') || videoUrl.includes('youtu.be')) {\r\n          const timeParam = `&t=${Math.floor(totalWatchTime)}s`;\r\n          const autoplayParam = videoUrl.includes(\"?\") ? \"&autoplay=1\" : \"?autoplay=1\";\r\n          videoUrl = `${movie.video}${autoplayParam}${timeParam}`;\r\n        }\r\n        // For Vimeo\r\n        else if (videoUrl.includes('vimeo.com')) {\r\n          const timeParam = `#t=${Math.floor(totalWatchTime)}s`;\r\n          const autoplayParam = videoUrl.includes(\"?\") ? \"&autoplay=1\" : \"?autoplay=1\";\r\n          videoUrl = `${movie.video}${autoplayParam}${timeParam}`;\r\n        }\r\n        // For direct video files\r\n        else {\r\n          const separator = videoUrl.includes(\"?\") ? \"&\" : \"?\";\r\n          videoUrl = `${movie.video}${separator}t=${Math.floor(totalWatchTime)}`;\r\n        }\r\n      } else {\r\n        // No saved time, just add autoplay\r\n        const autoplayParam = videoUrl.includes(\"?\") ? \"&autoplay=1\" : \"?autoplay=1\";\r\n        videoUrl = `${movie.video}${autoplayParam}`;\r\n      }\r\n\r\n      setVideoSrc(videoUrl);\r\n    } else {\r\n      // Modal closing - save watch time\r\n      if (startTime) {\r\n        const sessionWatchTime = Math.floor((Date.now() - startTime) / 1000);\r\n        const savedProgress = JSON.parse(localStorage.getItem(getStorageKey()) || '{}');\r\n        const newTotalTime = (savedProgress.totalTime || 0) + sessionWatchTime;\r\n        \r\n        localStorage.setItem(getStorageKey(), JSON.stringify({\r\n          totalTime: newTotalTime,\r\n          lastWatched: new Date().toISOString(),\r\n          movieTitle: movie.title\r\n        }));\r\n      }\r\n      \r\n      setVideoSrc(\"\");\r\n      setStartTime(null);\r\n    }\r\n  }, [status, movie.video]);\r\n\r\n  const handleModalClose = () => {\r\n    // Save session time before closing\r\n    if (startTime) {\r\n      const sessionWatchTime = Math.floor((Date.now() - startTime) / 1000);\r\n      const savedProgress = JSON.parse(localStorage.getItem(getStorageKey()) || '{}');\r\n      const newTotalTime = (savedProgress.totalTime || 0) + sessionWatchTime;\r\n      \r\n      localStorage.setItem(getStorageKey(), JSON.stringify({\r\n        totalTime: newTotalTime,\r\n        lastWatched: new Date().toISOString(),\r\n        movieTitle: movie.title\r\n      }));\r\n    }\r\n    \r\n    toggleModal();\r\n  };\r\n\r\n  const restartMovie = () => {\r\n    localStorage.removeItem(getStorageKey());\r\n    setWatchTime(0);\r\n    \r\n    // Reload video from beginning\r\n    const autoplayParam = movie.video.includes(\"?\") ? \"&autoplay=1\" : \"?autoplay=1\";\r\n    setVideoSrc(`${movie.video}${autoplayParam}`);\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  return (\r\n    <div className={`movieModal ${status ? 'active' : ''}`}>\r\n      <a href=\"#\" className=\"modalClose\" onClick={handleModalClose}>\r\n        <ion-icon name=\"close-outline\"></ion-icon>\r\n      </a>\r\n      \r\n      {/* Resume indicator */}\r\n      {status && watchTime > 30 && (\r\n        <div className=\"resumeIndicator\">\r\n          <p>Continue watching from {formatTime(watchTime)}?</p>\r\n          <button onClick={restartMovie} className=\"restartBtn\">\r\n            <ion-icon name=\"refresh-outline\"></ion-icon>\r\n            Restart\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {status && (\r\n        <iframe\r\n          width=\"1280\"\r\n          height=\"720\"\r\n          src={videoSrc}\r\n          title={`${movie.title} | Official Movie`}\r\n          frameBorder=\"0\"\r\n          allow=\"autoplay; accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n          allowFullScreen\r\n        ></iframe>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}