{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonic\\\\OneDrive\\\\Documents\\\\FInal Version(Hopefully) for stella site\\\\stellabelessimovies\\\\src\\\\components\\\\MovieSwiper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport \"./movieSwiper.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Autoplay, EffectCoverflow, FreeMode } from \"swiper/modules\";\nimport \"swiper/css\";\nimport \"swiper/css/effect-coverflow\";\nimport \"swiper/css/free-mode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSwiper({\n  slides,\n  slideChange\n}) {\n  _s();\n  const [tapPosition, setTapPosition] = useState(null);\n  const touchStartRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const handleTouchStart = e => {\n    const touch = e.touches[0];\n    touchStartRef.current = {\n      x: touch.clientX,\n      y: touch.clientY\n    };\n  };\n  const handleTouchEnd = (slideId, e) => {\n    const touch = e.changedTouches[0];\n    const dx = Math.abs(touch.clientX - touchStartRef.current.x);\n    const dy = Math.abs(touch.clientY - touchStartRef.current.y);\n\n    // Ignore if it was a swipe\n    if (dx > 10 || dy > 10) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = touch.clientX - rect.left;\n    const y = touch.clientY - rect.top;\n    setTapPosition({\n      x,\n      y\n    });\n    slideChange(slideId);\n    setTimeout(() => setTapPosition(null), 500);\n  };\n  const handleClick = (slideId, e) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setTapPosition({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    });\n    slideChange(slideId);\n    setTimeout(() => setTapPosition(null), 500);\n  };\n  return /*#__PURE__*/_jsxDEV(Swiper, {\n    modules: [EffectCoverflow, Autoplay, FreeMode],\n    effect: \"coverflow\",\n    grabCursor: true,\n    centeredSlides: true,\n    slidesPerView: \"auto\",\n    loop: true,\n    loopedSlides: slides.length,\n    freeMode: {\n      enabled: true,\n      momentum: true\n    },\n    autoplay: {\n      delay: 2500,\n      disableOnInteraction: false\n    },\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true\n    },\n    touchRatio: 2.5,\n    threshold: 5,\n    resistance: true,\n    resistanceRatio: 0.85,\n    className: \"movieSwiper\",\n    children: slides.map(slide => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide-content\",\n        onClick: e => handleClick(slide._id, e),\n        onTouchStart: handleTouchStart,\n        onTouchEnd: e => handleTouchEnd(slide._id, e),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: slide.previewImg,\n          alt: \"Preview\",\n          draggable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), tapPosition && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tap-indicator\",\n          style: {\n            left: tapPosition.x,\n            top: tapPosition.y\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, slide._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieSwiper, \"gB2z/u3vYrl83fH7SqMI7YWVZ38=\");\n_c = MovieSwiper;\nexport default MovieSwiper;\nvar _c;\n$RefreshReg$(_c, \"MovieSwiper\");","map":{"version":3,"names":["React","useState","useRef","Swiper","SwiperSlide","Autoplay","EffectCoverflow","FreeMode","jsxDEV","_jsxDEV","MovieSwiper","slides","slideChange","_s","tapPosition","setTapPosition","touchStartRef","x","y","handleTouchStart","e","touch","touches","current","clientX","clientY","handleTouchEnd","slideId","changedTouches","dx","Math","abs","dy","rect","currentTarget","getBoundingClientRect","left","top","setTimeout","handleClick","modules","effect","grabCursor","centeredSlides","slidesPerView","loop","loopedSlides","length","freeMode","enabled","momentum","autoplay","delay","disableOnInteraction","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","touchRatio","threshold","resistance","resistanceRatio","className","children","map","slide","onClick","_id","onTouchStart","onTouchEnd","src","previewImg","alt","draggable","fileName","_jsxFileName","lineNumber","columnNumber","style","_c","$RefreshReg$"],"sources":["C:/Users/sonic/OneDrive/Documents/FInal Version(Hopefully) for stella site/stellabelessimovies/src/components/MovieSwiper.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport \"./movieSwiper.css\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Autoplay, EffectCoverflow, FreeMode } from \"swiper/modules\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/effect-coverflow\";\r\nimport \"swiper/css/free-mode\";\r\n\r\nfunction MovieSwiper({ slides, slideChange }) {\r\n  const [tapPosition, setTapPosition] = useState(null);\r\n  const touchStartRef = useRef({ x: 0, y: 0 });\r\n\r\n  const handleTouchStart = (e) => {\r\n    const touch = e.touches[0];\r\n    touchStartRef.current = { x: touch.clientX, y: touch.clientY };\r\n  };\r\n\r\n  const handleTouchEnd = (slideId, e) => {\r\n    const touch = e.changedTouches[0];\r\n    const dx = Math.abs(touch.clientX - touchStartRef.current.x);\r\n    const dy = Math.abs(touch.clientY - touchStartRef.current.y);\r\n\r\n    // Ignore if it was a swipe\r\n    if (dx > 10 || dy > 10) return;\r\n\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const x = touch.clientX - rect.left;\r\n    const y = touch.clientY - rect.top;\r\n\r\n    setTapPosition({ x, y });\r\n    slideChange(slideId);\r\n    setTimeout(() => setTapPosition(null), 500);\r\n  };\r\n\r\n  const handleClick = (slideId, e) => {\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    setTapPosition({ x: e.clientX - rect.left, y: e.clientY - rect.top });\r\n    slideChange(slideId);\r\n    setTimeout(() => setTapPosition(null), 500);\r\n  };\r\n\r\n  return (\r\n    <Swiper\r\n      modules={[EffectCoverflow, Autoplay, FreeMode]}\r\n      effect=\"coverflow\"\r\n      grabCursor={true}\r\n      centeredSlides={true}\r\n      slidesPerView=\"auto\"\r\n      loop={true}\r\n      loopedSlides={slides.length}\r\n      freeMode={{ enabled: true, momentum: true }}\r\n      autoplay={{ delay: 2500, disableOnInteraction: false }}\r\n      coverflowEffect={{ rotate: 50, stretch: 0, depth: 100, modifier: 1, slideShadows: true }}\r\n      touchRatio={2.5}\r\n      threshold={5}\r\n      resistance={true}\r\n      resistanceRatio={0.85}\r\n      className=\"movieSwiper\"\r\n    >\r\n      {slides.map((slide) => (\r\n        <SwiperSlide key={slide._id}>\r\n          <div\r\n            className=\"slide-content\"\r\n            onClick={(e) => handleClick(slide._id, e)}\r\n            onTouchStart={handleTouchStart}\r\n            onTouchEnd={(e) => handleTouchEnd(slide._id, e)}\r\n          >\r\n            <img src={slide.previewImg} alt=\"Preview\" draggable={false} />\r\n            {tapPosition && (\r\n              <div\r\n                className=\"tap-indicator\"\r\n                style={{ left: tapPosition.x, top: tapPosition.y }}\r\n              />\r\n            )}\r\n          </div>\r\n        </SwiperSlide>\r\n      ))}\r\n    </Swiper>\r\n  );\r\n}\r\n\r\nexport default MovieSwiper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}